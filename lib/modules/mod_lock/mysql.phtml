<?php
/**************************************************************************
	mod_lock v1.0b						MySQL

	table layout:

	Table locks
	+----------+---------------+------+-----+---------+-------+
	| Field    | Type          | Null | Key | Default | Extra |
	+----------+---------------+------+-----+---------+-------+
	| release  | int(11)       |      | MUL | 0       |       |
	| type     | enum('O','T') |      | MUL | O       |       |
	| identity | varchar(23)   |      | MUL |         |       |
	| path     | varchar(127)  |      | MUL |         |       |
	+----------+---------------+------+-----+---------+-------+

	error numbers:

	1	lock()	mysql error when running lock query
	2	lock()	path already locked by someone else

**************************************************************************/


class mysqllock {

	function __construct($tbl_prefix="", $dbh) {
		debug("mysqllock::mysqllock($tbl_prefix)");
		  $this->tbl_prefix=$tbl_prefix;
		  $this->dbh = $dbh;
		  debug("mysqllock::mysqllock end","all");
	}

	function connect($host="localhost",$user="root",$password="", $database) {
		debug("mysqllock::connect($host, $user, [password])","store");
		$this->dbh = new mysqli('p:'.$host, $user, $password, $database);
		if ($this->dbh->connect_errno) {
			die("Error " . $this->dbh->connect_error);
		}

		if( !$this->dbh->ping() ){
			$this->dbh->close();
			$this->dbh = new mysqli('p:'.$config['host'], $config["user"], $config["password"], $config["database"]);
			if ($this->dbh->connect_errno) {
				die("Error " . $this->dbh->connect_error);
			}
		}
		debug("mysqllock::connect end","all");
	}

	function get_locks($identity) {
		debug("mysqllock:get_locks($identity)","store");
		$query_string="select `path`,`release`, `type`, `identity` from ".$this->tbl_prefix."locks where 
		`release` >=".time()." and `identity`='".AddSlashes($identity)."'";
		$query=@$this->dbh->query($query_string);
		while ($temp=@$query->fetch_array()) {
			$result[$temp["path"]]=$temp;
		}
		debug("mysqllock:get_locks end","all");
		return $result;
	}

	function lock($identity, $path, $type="O", $time=0) {
	/**********************************************************************
		This function locks an object/path
	 **********************************************************************/
		debug("mysqllock:lock($identity,$path,$time,$type)","store");
		$tablelock = "write";
		$checkonly = false;

		if (!$time) {
			$time=time()+$this->lock_duration;
 		}

		if($time < time()) {
			$checkonly = true;
			$tablelock = "read";
		}

		// lock table first
		$query_string="lock tables ".$this->tbl_prefix."locks ".$tablelock;
		$this->dbh->query($query_string);

		// check if the path is not already locked by a parent
		$query_string="
			select `path`, `release`, `type`, `identity` 
			  from ".$this->tbl_prefix."locks 
			 where ( ( path=substring('".AddSlashes($path)."',1,length(path)) 
				       AND `type`='T' ) 
				     OR ( `path`='".AddSlashes($path)."' )";

		// if we are locking a whole tree we must also check if no
		// child has been locked already
		if ($type=="T") {
			$query_string.=" OR ( `path` like '".AddSlashes($path)."%' ) ";
		}

		$alreadylocked=false;
		// see if this lock is still alive
		$query_string.=") AND `release`>=".time();
		$query=@$this->dbh->query($query_string);
		while ($lock=@$query->fetch_array()) {
			if ($lock["identity"]!=$identity) {
				// this is a lock with another identity, so fail the current lock attempt
				$alreadylocked=true;
				$this->locklist[]=$lock;
			}
		}

		$result=false;
		if (!$alreadylocked) {
			if(!$checkonly) {
				// clear old lock entries
				$query_string="
					delete from ".$this->tbl_prefix."locks where `path`='".AddSlashes($path)."'";

				$this->dbh->query($query_string);

				$query_string="
					insert into ".$this->tbl_prefix."locks (`path`, `release`, `type`, `identity`) values (
					'".AddSlashes($path)."', $time, '".AddSlashes($type)."',
					'".AddSlashes($identity)."')";

				$this->dbh->query($query_string);
				if (!$this->dbh->errno) {
					$result=true;
				} else {
					$this->error=2;
					$this->error_message="MOD_LOCK: ERROR 2: ".$this->dbh->error;
				}
			} else {
				$result = true;
			}
		} else {
			$this->error=1;
			$this->error_message="MOD_LOCK: ERROR 1: $path already locked.";
		}
		$query_string="unlock tables";
		$this->dbh->query($query_string);

		return ($result);
	}

	function unlock($identity,$path="") {

		$query_string="delete from ".$this->tbl_prefix."locks where `identity`='".AddSlashes($identity)."'";
		if ($path) {
			$query_string.=" and `path`='".AddSlashes($path)."'";
		}
		$this->dbh->query($query_string);

	}

	function close() {
	}

	function init() {
		$query_string="
CREATE TABLE ".$this->tbl_prefix."locks (
        `release` int NOT NULL,
        `type` enum('O','T') NOT NULL,
        `identity` varchar(32) NOT NULL,
        `path` varchar(127) NOT NULL,
  key (`release`),
  key (`type`),
  key (`identity`),
  key (`path`)
)";
		$this->dbh->query($query_string);
	}
}
