<?php

	if (!function_exists('addType')) {
		function addType($type, $name, $parents, $children, $icon) {
		global $ARCurrent;
			if (!$ARConfig->arTypeTree[$type]) {
				$ARConfig->arTypeTree[$type]=Array();
			}
			if (is_array($parents)) {
				foreach($parents as $parent) {
					$ARConfig->arTypeTree[$parent][$type]=$name;
				}
			} else if (is_string($parents)) {
				$ARConfig->arTypeTree[$parents][$type]=$name;
			}
			if (is_array($children)) {
				foreach($children as $child => $name) {
					$ARConfig->arTypeTree[$type][$child]=$name;
				}
			}
			$ARConfig->arTypeIcons[$type]=$icon;
		}
	}

	$typelist = Array(
		"paddressbook", 
		"particle",
		"pbookmark",
		"pcalendar",
		"pdir",
		"pfile",
		"pgroup",
		"pnewspaper",
		"pobject",
		"ppage",
		"pperson",
		"pphoto",
		"pphotobook",
		"pscenario",
		"pshortcut",
		"psite",
		"puser",
		"pldapconnection",
		"pcalitem",
		"porganization",
		"pprofile",
		"psearch",
		"psection"
	);

	$ARCurrent->arTypeIcons = array();
	foreach ($typelist as $type) {
		$ARCurrent->arTypeIcons[$type] = Array(
			"default" => $AR->dir->images.'icons/large/' . $type . '.png',
			"medium"  => $AR->dir->images.'icons/medium/' . $type . '.png',
			"small"   => $AR->dir->images.'icons/small/' . $type . '.png'
		);
	}

	$list=$this->ls('/system/ariadne/types/','system.get.phtml');
	if (is_array($list)) {
		foreach($list as $type) {
			$ARCurrent->arTypeNames[$type->data->value] = $type->nlsdata->name;
			$ARCurrent->arTypeTree[$type->data->value]=Array();
			$children=$this->ls('/system/ariadne/typetree/normal/'.$type->data->value.'/','system.get.phtml');
			if (is_array($children)) {
				foreach($children as $child) {
					$ARCurrent->arTypeTree[$type->data->value][$child->data->value]=$child->nlsdata->name;
				}
			}
		}
	}
	$allnls = $ARCurrent->allnls;
	$ARCurrent->allnls = true;	
	if ($this->CheckLogin('read') && $this->CheckConfig($arCallFunction, $arCallArgs)) {
		$arResult=$ARCurrent->arTypeTree;
	}
	$ARCurrent->allnls = $allnls;

	if (!$arResult && !$ARCurrent->arResult) {
		$arResult=$ARCurrent->arTypeTree;
	}	
?>
