<?php
		function arGetGrantType($value) {
			if (($value & ARMASKLOCAL) && ($value & ARMASKCHILDREN)) { 
				$result=""; 
			} else if ($value & ARMASKLOCAL) {
				$result="=";
			} else {
				$result="&gt;";
			}
			return $result;
		}
?>
<html>
<head>
<style>
	body {
		margin: 0px;
		padding: 0px;
		border: 0px;
	}
	body, td {
		font: menu;
	}
	#grants_list table {
		height: 180px;
	}
	#grants_list > table {
		height: 155px;
	}
	table {
		padding: 0px;
		width: 100%;
		height: 100%;
		border-top: 1px solid buttonshadow;
		border-left: 1px solid buttonshadow;
		border-right: 1px solid buttonhighlight;
		border-bottom: 1px solid buttonhighlight;
	}
	table table {
		border: 0px;
	}
	table th {
		background-color: buttonface;
		BORDER-RIGHT: buttonshadow 1px solid; 
		BORDER-TOP: buttonhighlight 1px solid; 
		BORDER-LEFT: buttonhighlight 1px solid; 
		CURSOR: default; 
		BORDER-BOTTOM: buttonshadow 1px solid;
		FONT: menu;
	}
	table tbody {
		background-color: white;
	}
	table thead {
		background-color: buttonface;
	}
	table td {
		margin: 0px;
		border: 0px;
		PADDING-RIGHT: 5px; 
		PADDING-LEFT: 5px; 
		PADDING-BOTTOM: 2px; 
		PADDING-TOP: 2px
	}
	table thead td {
		BORDER-RIGHT: buttonshadow 1px solid; 
		BORDER-TOP: buttonhighlight 1px solid; 
		BORDER-LEFT: buttonhighlight 1px solid; 
		CURSOR: default; 
		BORDER-BOTTOM: buttonshadow 1px solid
	}
	table tbody tr.selected {
		background-color: highlight;
		color: highlighttext;
	}
	table tbody tr.selected A {
		color: highlighttext;
	}
	table tbody tr.grey, table tbody tr.grey A {
		color: #999999;
	}
	table td A:hover {
		background-color: highlight;
		color: highlighttext;
	}
	A {
		text-decoration: none;
		color: black;
	}
	.wgBrowseInput {
		width: 125px;
	}
	.wgBrowseButton {
		width: 80px;
	}
	A.hasgrants {
		font-weight: bold;
		text-decoration: underline;
	}
	A.hasnogrants {
		font-weight: normal;
	}
</style>
<script>
  var ARMASKLOCAL = <?php echo ARMASKLOCAL; ?>;
  var ARMASKCHILDREN = <?php echo ARMASKCHILDREN; ?>;
  var ARMASKGLOBAL = <?php echo ARMASKGLOBAL; ?>;
  var ARGRANTOLD = <?php echo ARGRANTOLD; ?>;
  var ARGRANTLOCAL = <?php echo ARGRANTLOCAL; ?>;
  var ARGRANTCHILDREN = <?php echo ARGRANTCHILDREN; ?>;
  var ARGRANTGLOBAL = <?php echo ARGRANTGLOBAL; ?>;

  var grants = new Array();
  grants['puser'] = new Array();
  grants['pgroup'] = new Array();

  function editUserGrants(type, id) {
	var userGrants = new Array;
	// copy user grants
    userGrants.concat(grants[type][id]);
	parent.selectUser(type, id, grants[type][id]);
  }

  function editGrant(type, id, grant) {
	var userGrants = new Array;
	// copy user grants
    userGrants.concat(grants[type][id]);
	parent.selectGrant(type, id, grant, grants[type][id]);
  }

  function loadUser(type, id) {
	parent.loadUser(type, id);
  }

  id2path = new Array();
  id2path['pgroup'] = new Array();
  id2path['puser'] = new Array();
<?php
    if (is_array($data->grants)) {
		foreach ($data->grants as $type => $grantslist) {
			while (list($id, $grants)=@each($grantslist)) {
				switch ($type) {
					case 'pgroup':
						$path  = current($this->find('/system/groups/', 'login.value="'.$id.'"', 'system.get.path.phtml'));
					break;
					case 'puser':
						$path  = current($this->find('/system/users/', 'login.value="'.$id.'"', 'system.get.path.phtml'));
					break;
				}
				echo "  id2path['$type']['$id'] = '$path'; \n";
				echo "  grants['$type']['$id'] = new Array();\n";
				if ($grants && is_array($grants)) {
					ksort($grants);
					while (list($grant, $modifiers)=each($grants)) {
						echo "  grants['$type']['$id']['$grant'] = new Array();\n";
						if (!is_array($modifiers)) {
							echo "  grants['$type']['$id']['$grant']['*'] = $modifiers; \n";
						} else
						if (is_array($modifiers)) {
							while (list($modifier, $value)=each($modifiers)) {
								echo "  grants['$type']['$id']['$grant']['$modifier'] = $value;\n";
							}
						}
					}
				}
			}
		}
	}
?>
</script>
</head>
<body onLoad="parent.fixIESize();"> 
		<table cellspacing="0">
		<thead>
		<tr>
			<td>&nbsp;</td>
			<td><?php echo $ARnls["name"]; ?></td>
			<td><?php echo $ARnls["grants"]; ?></td>
		</tr>
		</thead>
		<tbody>
		<?php
			function array_compare(&$ar1, &$ar2) {
				if (count($ar1) != count($ar2)) {
					return false;
				} else {
					foreach ($ar1 as $key => $value) {
						if (is_array($value) && is_array($ar2[$key])) {
							return array_compare($ar1[$key], $ar2[$key]);
						} else 
						if ($value !== $ar2[$key]) {
							return false;
						}
						return true;
					}
				}
			} 

			function DisplayGrants(&$grantslist, $type, $grey=false) {
				global $AR, $ARCurrent, $ARnls;
				if ($grantslist[$type] && is_array($grantslist[$type])) {
					ksort($grantslist[$type]);
					while (list($id, $grants)=each($grantslist[$type])) { // path was login en is weer login
						if (!$ARCurrent->donelist[$type][$id]) {
							$ARCurrent->donelist[$type][$id]=true;
							echo "<tr valign=\"middle\" id=\"grants-$type-$id\"";
							if ($grey) {
								echo " class=\"grey\"";
							}
							echo "><td>";
							echo "<img src=\"".$AR->dir->images."icons/".$type.".gif\"></td>";
							echo "<td valign=\"middle\">";
							echo "<a href=\"javascript:loadUser('$type', '$id');\">$id</a>";
							echo "</td>";
							echo "<td valign=\"middle\">";
							if ($grants && is_array($grants)) {
								$grants_check = $grants;
								foreach ($grants as $grant => $grant_ar) {
									array_shift($grants_check);
									foreach ($grants_check as $grant_c => $grant_ar_c) {
										if (array_compare($grant_ar, $grant_ar_c)) {
											$grants_eq[$grant][] = $grant_c;
											unset($grants[$grant_c]);
										}
									}
								}
								reset($grants);
								ksort($grants);
								while (list($grant, $modifiers)=each($grants)) {
									if (!is_array($modifiers)) {
										echo arGetGrantType($modifiers);
									} 
									if (is_array($grants_eq[$grant])) {
										foreach ($grants_eq[$grant] as $g_add) {
											$grant .= ", $g_add";
										}
									}
									if (!$grey) {
										echo "<a href=\"javascript:editGrant('$type', '$id', '$grant');\">$grant";
									} else {
										echo $grant;
									} 
									if (is_array($modifiers)) {
										echo "( ";
										while (list($modifier, $value)=each($modifiers)) {
											echo arGetGrantType($value);
											echo $modifier." "; 
										}
										echo ")";
									}
									if (!$grey) {
										echo "</a> ";
									} else {
										echo " ";
									}
								}
							}
							echo "</td></tr>";
						}
					}
				}
			}
			if ($data->grants && is_array($data->grants)) {
				DisplayGrants($data->grants,"pgroup");
				DisplayGrants($data->grants,"puser");
			}

			// get a list of all previous defined grants
			// skip the current object
			if ($this->parent!='..') {
				$grants=$this->parents($this->parent, 'system.get.grants.phtml','','/');
			}
			// then display them beginning with the current defined grants
			if (is_array($grants)) {
				while (list($key, $localgrants)=each($grants)) {
					$list=Array('pgroup','puser');
					while (list($key, $type)=each($list)) {
						if (is_array($localgrants[$type])) {
							while (list($gkey, $gval)=each($localgrants[$type])) {
								if ($type=='pgroup' && is_array($prevgrants[$type][$gkey]) && is_array($gval)) {
									$prevgrants[$type][$gkey]=array_merge($gval, $prevgrants[$type][$gkey]);
								} else if ($gval && !is_array($gval)) {
									$prevgrants[$type][$gkey] = $gval;
								} else if ($gval) {
									$prevgrants[$type][$gkey] = $gval;
								}
							}
						}
					}
				}
				DisplayGrants($prevgrants, "pgroup", true);
				DisplayGrants($prevgrants, "puser", true);
			} 
		?>
		<tr height="100%"><td colspan="3"></td></tr>
		</tbody>
		</table>
</body>
</html>