<?php
  // this template must always be called from between the
  // $AR->lockkey semaphores! Use pobject->lock!
  debug($this->type."/SetLock.phtml: $id , $duration","class");
  $arResult=0;
  $ok=0;
  if ($id) {
    if ($this->CheckSilent("edit") || $this->CheckSilent("delete")) {
      // first check parents for locks (checks current object too!)
      debug("grants ok","all");
      $this->parents(".","GetLock.phtml");
      $criteria["locked"]["duration"][">"]=time();
      $this->find(".",$criteria,"GetLock.phtml");
      if ($ARCurrent->locks) {
        if ((sizeof($ARCurrent->locks)==1) && 
            ($ARCurrent->locks[$this->path]) &&
            ($ARCurrent->locks[$this->path]["id"]==$id)) {
          $ok=1;
        }
      } else { 
        $ok=1;
      }
      if ($ok) {
        debug("children ok","all");
        // all checks passed, lock it up.
        $data->locked["id"]=$id;
        $data->locked["duration"]=$duration;
        $properties["locked"][0]["id"]="'".AddSlashes($id)."'";
        $properties["locked"][0]["duration"]=intval($duration);
        $this->save($this->path, $this->type, $data, $properties);
        $arResult=$data->locked;
      }
    }
  }
  debug($this->type."/SetLock.phtml: end","all");
?>