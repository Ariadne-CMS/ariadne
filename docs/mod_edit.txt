mod_edit.php documentation

methods:

	function setEditMode($mode=false, $template='user.edit.html', $target='_top') {

		set editMode on (true) or off (false),
		set the template and target to use in links when editmode is on.

	function getEditMode() {

		returns true if the editMode is on, false otherwise

	function getEditTemplate() {

		returns the template to use in links in editmode

	function getEditTarget() {

		returns the target to use in links in editmode

	function showInputText($var, $name, $title='') 

		show an editable element as an input line, if 
		editMode is on, or simply echo it if not

	function showSpan($var, $name, $title='') 

		show an editable element as an editable span, if 
		editMode is on, or simply echo it if not

	function showDiv($var, $name, $title='') 

		show an editable element as an editable div, if 
		editMode is on, or simply echo it if not.

	function showLink($path, $extra)

		show a link, with the correct template and target

	function showEditableLink($path, $extra)

		show a link, with the correct template and target,
		but no href in edit mode, the action is on double 
		click instead.

	function showHref($path)

		replaces the href tag within an imagemap by echoing the
		url or adding the edit template to the url in the echo.

Missing:

- workable user interface for adding new objects, without using 
  the wizards
- better solution for presenting metadata
- more error checking in the save routines

This is how it is supposed to work:

view.html:
<pinp>
  import('mod_edit.php');
</pinp>
<html>
<body>
  <h1><pinp> edit::showSpan($nlsdata->name, "[$nls][name]", "Title"); </pinp></h1>
  <p><pinp>
    edit::showDiv(ParsePage($nlsdata->summary), "[$nls][summary]", "Summary");
  </pinp></p>
  <ul>
  <pinp>
    ls('show.subnav.html');
  </pinp>
  </ul>
  <pinp>
    edit::showDiv( GetPage(), "[$nls][page]", "Page");
  </pinp>
</body>
</html>

show.subnav.html:
<pinp>
  import('mod_edit.php');
</pinp>
<li><pinp>
  edit::showEditableLink($path);
  edit::showSpan($nlsdata->name, "[$nls][name]", "Title");
</pinp></a></li>

user.edit.page.html
<pinp>
  import('mod_edit.php');
  if (checkgrant('edit')) {
    edit::setEditMode(true); 
  }
  call('view.html');  
</pinp>

when the user via either a link in a page, or a bookmarklet button 
in the browser, opens the user.edit.html template, it shows a toolbar, and
loads an iframe with the user.edit.page.html template, which only sets the
editMode on and then loads the normal view.html template.

