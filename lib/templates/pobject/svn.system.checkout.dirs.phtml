<?php
	if ($this->CheckLogin("layout") && $this->CheckConfig()) {
		$this->resetloopcheck();
	
		if ($dirlist) {
			foreach ($dirlist as $item) {
				if ($item['type'] == "D") {
					echo "found dir: " . $item['name'] . "<br>";

					$dirinfo = array();
					$dirinfo['ar:path'] = basename($item['name']);

					$svn_type = $fstore->svn_rpropget($svn, $repository, "ar:type", $dirinfo['ar:path']);
					if ($svn_type != "") {
						echo "SVN type: [$svn_type]<br>";
						$dirinfo['ar:type'] = $svn_type;
					} else {
						echo "SVN type not found, default to psection<br>";
						$dirinfo['ar:type'] = "psection";
					}

					$svn_name = $fstore->svn_rpropget($svn, $repository, "ar:name", $dirinfo['ar:path']);
					if ($svn_name != "") {
						$dirinfo['ar:name'] = $svn_name;
					} else {
						$dirinfo['ar:name'] = $dirinfo['ar:path'];
					}

					// Check if the dir exists - if not, create the object in Ariadne.
					$dirpath = $this->path . $dirinfo['ar:path'] . "/";

					if (!$this->exists($dirpath)) {
						echo $dirinfo['ar:path'] . " does not exist, creating...<br>";
						$newData = array();
						$newData['arNewFilename'] 	= $dirinfo['ar:path'];
						$newData['arNewType'] 		= $dirinfo['ar:type'];
						$newData[$ARConfig->nls->default]['name']	= $dirinfo['ar:name'];

						$this->call("system.new.phtml", $newData);
						if ($this->error) {
							echo "Error: " . $this->error . "<br>";
						} else {
							echo "Running recursive checkout on $dirpath<br>";
							$arCallArgs['repository'] = $repository;
							$this->get($dirpath, "svn.system.checkout.recursive.phtml", $arCallArgs);
						}
					}
				}
			}
		}
	}
?>