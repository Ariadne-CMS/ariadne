<?php
	/******************************************************************
	 system.save.grants.phtml                              Muze Ariadne
	 ------------------------------------------------------------------
	 Arguments: $delete, $type, $id, $newgrants. $path
	 Grant needed: config
	 Global variables: none

	 This template saves changes to grants defined at the current
	 object. It then updates the changes at the user/group object too.
	 
	 no result

	******************************************************************/
	if ($this->CheckLogin("config") && $this->CheckConfig()) {
		// some variable fetching stuff
		$path=$this->getdata("path", "none");
		$newgrants=$this->getdata("newgrants", "none");
		$delete=$this->getdata("delete", "none");
		$type=$this->getdata("type", "none");
		$id=$this->getdata("id", "none");
		$grant=$this->getdata("grant" , "none");
		$modifier=$this->getdata("modifier", "none");
		if ($delete) {
			if (!$type || !$id || !$delete) {
				$this->error=$ARnls["err:missingparam"];
				//  $this->error="Missing parameters";
			}
		} else {
			if (!$path || !$newgrants) {
				$this->error=$ARnls["err:missingparam"];
				//  $this->error="Missing parameters";
			}
		}

		if (!function_exists("arGetGrantType")) {
		    function arGetGrantType($value) {
			    if (($value & ARMASKLOCAL) && ($value & ARMASKCHILDREN)) {
				    $result="+";
			    } else if ($value & ARMASKLOCAL) {
				    $result="=";
			    } else {
				    $result=">";
			    }
			    return $result;
		    }
		}

		if (!function_exists("arDelGrant")) {
			function arDelGrant(&$grants, $id, $grant='', $modifier='') {
				if ($grants[$id]) {
					if ($grant===false) {
						unset($grants[$id]);
					} else {
						if (!$modifier) {
							unset($grants[$id][$grant]);
						} else {
							unset($grants[$id][$grant][$modifier]);
							if (!@count($grants[$id][$grant])) {
								unset($grants[$id][$grant]);
							}
						}
						if (!@count($grants[$id])) {
							unset($grants[$id]);
						}
					}
				}
			}
		}


		if (!$this->error) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
			$this->data=current($this->get(".","system.get.data.phtml"));

			if (!$path) {
				$searchpath["pgroup"]="/system/groups/";
				$searchpath["puser"]="/system/users/";
				$criteria["login"]["value"]["="]="'".AddSlashes($id)."'";
				if ($temp=current($this->find($searchpath[$type], $criteria, "system.get.phtml"))) {
					$path=$temp->path;
				} else {
					$this->error=sprintf($ARnls["err:notfindusergroup"],$id);
					//  $this->error="Couldn't find user/group $id";
				}
			}
			if ($delete) {
				arDelGrant($this->data->config->grants[$type], $id, $grant, $modifier);
				if ($id==$this->data->login && $type==$this->type) {
					arDelGrant($this->data->config->usergrants, $this->path, $grant, $modifier);
				} else {
					$result=current($this->get($path, "system.save.grants.user.phtml", Array(
										"action"	=> "delete",
										"path"		=> $this->path,
										"grant"		=> $grant,
										"modifier"	=> $modifier)));
					if ($result!=$ARnls["ok"]) {
						$this->error=sprintf($ARnls["err:notremovegrant"],$id,$path);
						//  $this->error="Couldn't remove grant in $id ($path)";
					}			
				}
			} else if ($newgrants) {
				if ($type=current($this->get($path, "system.get.type.phtml"))) {
					if ($this->store->implements($type, "pgroup")) { 
						$type="pgroup";
					} else if ($this->store->implements($type, "puser")) { 
						$type="puser";
					} else {
						$this->error=sprintf($ARnls["err:nousergroup"],$path);
						//  $this->error="$path is not a user or group";
					}
					if (!$this->error) { 
						if ($id=current($this->get($path, "system.get.login.phtml"))) {

							$criteria["login"]["value"]["="]="'".AddSlashes($id)."'";
							$newgrants=ereg_replace('([\(\)])',' \\1 ',$newgrants);
							$newgrants=str_replace(',',' ',$newgrants);
							$newgrants=ereg_replace("[[:space:]]"," ",$newgrants);
							$newgrant=strtok($newgrants, " ");
							if ($newgrant=="{}") {
								if ($result=current($this->get($path,"system.get.grants.phtml",Array("path" => $this->path)))) {
									$current=implode(" ", array_keys($result));
									$newgrants=ereg_replace(' ?\{\} ?',AddSlashes($current),$newgrants);		
								}
								$newgrant=strtok($newgrants, " ");
							} else if (ereg('(\{(.*)\})',$newgrant,$regs)) {
								$cloned="";
								if ($this->data->config->grants[$type][$regs[2]]) {
									while (list($key, $value)=each($this->data->config->grants[$type][$regs[2]])) {
										if (is_array($value)) {
											$cloned.="$key ( ";
											while (list($modifier, $mod_val)=each($modifiers)) {
												$cloned.=arGetGrantType($mod_val).$modifier." ";
											}	
											$cloned.=" ) ";
										} else {
											$cloned.=arGetGrantType($value).$key." ";
										}
									}
									// $cloned=implode(" ",array_keys($this->data->config->grants[$type][$regs[2]]));
								}
								$newgrants=ereg_replace(" ?".$regs[1]." ?",AddSlashes($cloned),$newgrants);
								$newgrant=strtok($newgrants, " ");
							}
							$oldgrant='';
							$oldgranttype=0;
							while ($newgrant && !$this->error) {
								$modifier="";
								if ($newgrant=="(") {
									// remember for which grant these modifiers are set
									// and set a signal that the next 'grants' are modifiers
									$modifyfor=$oldgrant;
								} else if ($newgrant==")") {
									// stop modifying grant
									$modifyfor="";
								} else if ($newgrant!="{}") {
									if (substr($newgrant,0,1)=="-") {
										$delgrant=substr($newgrant,1);
										if ($modifyfor) {
											$modifier=$delgrant;
											$delgrant=$modifyfor;
										}
										arDelGrant($this->data->config->grants[$type], $id, $delgrant, $modifier);
										if ($id==$this->data->login && $type==$this->type) {
											arDelGrant($this->data->config->usergrants, $this->path, $delgrant, $modifier);
										} else {
											$result=current($this->get($path, "system.save.grants.user.phtml", Array(
														"action"	=> "delete",
														"path"		=> $this->path,
														"grant"		=> $delgrant,
														"modifier"	=> $modifier)));
											if ($result!=$ARnls["ok"]) {
												$this->error=sprintf($ARnls["err:notsavegrant"],$path);
												//  $this->error="Couldn't save grant in $path";
											}
										}
									} else {
										switch(substr($newgrant,0,1)) {
											case ">" :
												$newgrant=substr($newgrant,1);
												$granttype=ARGRANTCHILDREN;
												break;
											case "=" :
												$newgrant=substr($newgrant,1);
												$granttype=ARGRANTLOCAL;
												break;
											case "+" :
												$newgrant=substr($newgrant,1);
											default :
												$granttype=ARGRANTGLOBAL;
												break;		
										}
										if ($modifyfor) {
											$modifier=$newgrant;
											$newgrant=$modifyfor;
											if (!is_array($this->data->config->grants[$type][$id][$newgrant])) {
												unset($this->data->config->grants[$type][$id][$newgrant]);
											}
											$this->data->config->grants[$type][$id][$newgrant][$modifier]=$granttype;
										} else {
											$this->data->config->grants[$type][$id][$newgrant]=$granttype;
										}
										// check whether the given id and type match the current object
										if ($id==$this->data->login && 
											( ( $type=="pgroup" && $this->implements("pgroup") ) ||
											  ( $type=="puser") ) ) {
											// they match, so make the changes here, otherwise they will be overwritten
											$this->data->config->usergrants[$this->path][$newgrant]=$this->data->config->grants[$type][$id][$newgrant];
										} else {
											$result=current($this->get($path, "system.save.grants.user.phtml", Array(
													"action"	=> "add",
													"path"		=> $this->path,
													"grant"		=> $newgrant,
													"modifier"	=> $modifier,
													"granttype"	=> $granttype)));
											if ($result!=$ARnls["ok"]) {
												$this->error=sprintf($ARnls["err:notsavegrant"],$path);
												//  $this->error="Couldn't save grant in $path";
											}
										}
									}
								}
								$oldgrant=$newgrant;
								$oldgranttype=$granttype;
								$newgrant=strtok(" ");
							}
						} else {
							$this->error=sprintf($ARnls["err:notgetlogin"],$path);
							//  $this->error="Couldn't get login/id from $path";							
						}
					}
				} else {
					$this->error=sprintf($ARnls["err:notfindusergroup"],$path);
					//  $this->error="Couldn't retrieve user/group $path";
				}
			}
			if (!$this->error) {
				$this->save($properties);
				$this->ClearCache($this->path, false, true);
			}
		}
	}
?>
