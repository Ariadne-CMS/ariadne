<?php
	echo "SSCR: " . $this->path . "<br>";

	if ($this->CheckLogin("layout") && $this->CheckConfig()) {
		$this->resetloopcheck();

		if (isset($repository)) {
			$repository = rtrim($repository, "/") . "/";
			$fstore	= $this->store->get_filestore_svn("templates");
			$svnstack = &PEAR_ErrorStack::singleton('VersionControl_SVN');
			$svn	= $fstore->connect($this->id, $username, $password);

			if ($svn['info']['Revision']) {
				echo $this->path . " is already under version control - update instead.<br>";
			}

			echo "<br>";
			echo "Checkout for " . $this->path . "<br>";

			if ($repoPath) {
				$repo_subpath = substr($this->path, strlen($repoPath));
			} else {
				// This is also the first loop!
				$fstore->svn_accept_cert($svn, $repository);
				$repo_subpath = '';
			}

			$repository = rtrim($repository, "/") . "/" . $repo_subpath;
			echo "Using repo: $repository<br>";

			// Checkout the templates.
			$result = $fstore->svn_checkout($svn, $repository);
			print_r($result);

			if ($result) {
				$templates = array();
				foreach ($result as $item) {
					$templates[] = $item['name'];
				}

				$this->call(
					"svn.system.compile.templates.phtml",
					array(
						'templates' 	=> $templates,
						'fstore'	=> $fstore,
						'svn'		=> $svn
					)
				);
			}

			// Run checkout on the existing subdirs.
			$arCallArgs['repoPath'] = $this->path;
			$this->ls($this->path, "svn.system.checkout.recursive.phtml", $arCallArgs);

			// Create the dirs and checkout them if needed.
			$dirlist = $fstore->svn_list($svn);
			if ($dirlist) {
				$arCallArgs['dirlist'] = $dirlist;
				$arCallArgs['svn'] = $svn;
				$arCallArgs['fstore'] = $fstore;
				$this->call("svn.system.checkout.dirs.phtml", $arCallArgs);
			}
			flush();
		}
	}
?>