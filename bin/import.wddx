#!/usr/bin/php -q
<?php
	$ariadne = "../lib";
	if (!@include_once($ariadne."/configs/ariadne.phtml")) {
		chdir(substr($_SERVER['PHP_SELF'], 0, strrpos($_SERVER['PHP_SELF'], '/')));
		if(!include_once($ariadne."/configs/ariadne.phtml")){
			echo "could not open ariadne.phtml";
			exit(1);
		}
	}
	require_once($ariadne."/configs/store.phtml");
	require_once($ariadne."/includes/loader.web.php");
	require_once($ariadne."/stores/".$store_config["dbms"]."store.phtml");
	require_once($ariadne."/ar.php");

	$inst_store = $store_config["dbms"]."store";
	$store = new $inst_store($root,$store_config);

	$ARLogin = "admin";
	$AR->user=current($store->call("system.get.phtml",array(),$store->get("/system/users/admin/")));

	require_once($store->get_config("code")."modules/mod_import_wddx.php");

	//debugon('all');
	$HELP_INFO = 
"import.wddx [--options] [source path] [destination path] file.wddx
The import command will import objects from the current Ariadne database to
the specified .wddx file. It will import all objects from your .wddx file.

  --verbose     more output
  --debug       enable debugging
  --skiptemplates          Don't import templates
  --forcetemplates         Force import templates
  --dellalltemplates       Remove all templates before import

  --skipgrants             Don't import grants

  --skipdata               Don't import object data
  --forcedata              Force import object data

  --skipfiles              Don't import files
  --forcefiles             Force import files

  --prefix                 Prefixes all objects with the given path
";

	$arg_c=0;
	$arg_v[$arg_c++]=$argv[0];

	next($argv); // do not parse the filename
	while (list(,$cmd)=each($argv)) {
		if (strpos($cmd, "--") === 0) {
			if (strpos(substr($cmd, 2),"-")===false || (
				strpos(substr($cmd, 2),"-") >= strpos($cmd, "=")
			)) {
				$option_switch=substr($cmd, 2);
				if (strpos($option_switch, "=")!==false) {
					$option_value=substr($option_switch, strpos($option_switch, "=")+1);
					$tmp = substr($option_switch,0,strpos($option_switch,"="));
					$option_switch = $tmp;
				}
			} else {


				$option_switch=substr($cmd, 2, strpos(substr($cmd, 2),"-"));

				if (strpos($cmd, "=")!==false) {
					$option_value=substr($cmd, strpos($cmd, "=")+1);
					$option=substr($cmd, strlen($option_switch)+3, strpos($cmd, "=") - (strlen($option_switch)+3));
				} else {
					$option=substr($cmd, strlen($option_switch)+3);
				}
			}

			switch ($option_switch) {
				case 'help':
					echo $HELP_INFO;
					exit;
				break;

				case 'debug':
					$options["debug"]=true;
				break;

				case 'verbose':
					$options["verbose"]=true;
				break;

				case 'skipdata':
					$options["skipdata"]=true;
				break;
				case 'forcedata':
					$options["forcedata"]=true;

				break;
				case 'skiptemplates':
					$options["skiptemplates"]=true;
				break;
				case 'dellalltemplates':
					$options["delalltemplates"]=true;
				break;

				case 'skipgrants':
					$options["skipgrants"]=true;
				break;

				case 'skipfiles':
					$options["skipfiles"]=true;
				break;
				case 'forcefiles':
					$options["forcefiles"]=true;
				break;

				case 'prefix':
					if($option_value) {
						$options["prefix"] = $option_value;
					}
				break;

				default:
					echo "unknow option-switch ($option_switch)\n";
			}
		} else {
			$arg_v[$arg_c++]=$cmd;
		}
	}

	switch($arg_c){
		case 4:
			$srcpath=$arg_v[1];
			$dstpath=$arg_v[2];
			$srcfile=$arg_v[3];
			break;
		case 3:
			$srcpath=$arg_v[1];
			$dstpath=$srcpath;
			$srcfile=$arg_v[2];
			break;
		case 2:
			$srcpath='/';
			$dstpath=$srcpath;
			$srcfile=$arg_v[1];
			break;
		case 1:
		default:
			echo $HELP_INFO;
			exit(0);

	}

	$options["srcpath"]=$srcpath;
	$options["dstpath"]=$dstpath;

	if( $srcfile != '-' ){
		// open file
		$in=fopen($srcfile, 'r');
	} else {
		// open stdin
		$in=fopen('php://stdin', 'r');
	}

	if($options["debug"]){
		debugon('all');
	}
	set_time_limit(0);

	$import = new import_wddx($options);
	$import->parse($in,$store);

	if($options["debug"]){
		debugoff();
	}

?>