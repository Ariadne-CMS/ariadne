Ariadne 2.3.1-dev

Changes in Ariadne since version Ariadne 2.3-dev

IMPORTANT:
	The postgresql store layer has gone through some major changes to make it more
	like the mysql store layer, but still using the extra features that
	postgresql offers. After using this revision of the postgresql store,
	reverting back to the older revision of the store needs an export/import
	to reset some tables with state data.

New Features:
	- user.notfound.html now calls 2 templates depending on the full page not
	  found or part of a page, user.notfound.full.html user.notfound.inpage.html
	- You can now call class templates directly without consulting the pinp templates
	  through: call("#view.html") instead of call("view.html")
	- You can now switch to a syntax-highlighted non-editable view in the template editor.
	- Added htmlcleaner by troels@kyberfabrikken.dk. Added rules based html parsing to it.

Bugs Fixed:
	- Removed some legacy code which made it impossible to 'renew' an expired
	  session.
	- We now call the link dialog in the WYSIWYG editor on the current object.
	- Fixed passing of data to pobject::_NewObject()
	- Fixed recursive calling of user.login.html

Changes in Ariadne since version 2.2


New features:
	- Added a new Search Folder class, which allows you to enter a
	  search query, and use that as a virtual folder.
	- The columns in the templates overview are now sortable.
	- Added a rotate() method to pphoto
	- mkdir in FTP now creates a configurable object type.
	- the FTP server now supports the 'REST' operation. This makes it possible
	  to resume an upload or download.
	- added an option to the FTP server configuration which you can use to disable listmode symlinking.
	- Changed the 'refresh cache on change' to be really permanent.
	- added getcache() method in pobject, that returns the contents
	  of a privatecache image.
	- revised the Postgresql store to use more features
	- Added mod_password a password generation class based on pwgen
	- Added psection which behaves like a psite for the parents() call
	- Added username and login to the title of Ariadne windows. (thanks to Gerhard Hoogterp)
	- Added object type and template and grant information to the manage.info.html (thanks to Gerhard Hoogterp)
	- Cleaned up the PINP compiler
	- Added first verion of the inline editting module mod_edit.php
	- pobject/browsercheck.phtml now returns the minor version number as $result['minor']
	- Added function touch(id, timestamp) to the mysqlstore and postgresqlstore
	- Added fulltext search and indexing support for mysql4 
	  (contributed by Goran Topic) created a new mysql4 store and sql compiler for it.
	- Added fulltext search and indexing support for mysql (>= 3.23.23)
        - Added the store function store::is_supported() which you can ask if the
	  store implements a specific feature (like 'fulltext').
	- Added $AR->https to lib/configs/ariadne.phtml which enables or disables https usage in make_url();
	- Enabled the save button in toolbar.php
	- Added default settings for the image browse dialog in editor.ini
	- Added pphoto::rotate(), pphoto::crop(), pphoto::getimageinfo()
	- Added the ability to use a != operator in combination with .implements in query language
	  (mysql/mysql4/postgresql)
	- Added the ability to use properties which are not part of some of the classes in the result set. E.g:
	  text.value and ((object.implements = 'particle' and article.start > 0) or (object.implements = 'pdir'))
	  (mysql/mysql4/postgresql)
	- Added strip_tags() functionality to ppage/system.save.data.phtml for use with summaries.
	- Moved authentication functionality from pobject::CheckLogin() to the loader.
	- You can now login as a different user on your current session.
	- Updated documentation in ariadne.ax
	- Now using small nls flags for language selection in the wizard. Thank to Paul Meijers.
	- Updated ldSetUserCookie and ldGetUserCookie to use more options from setcookie()
	- Added enhance pre-install checking, should prevent most common mistakes.
		
Bugs Fixed:
	- Removed an extra character '7' from particle/system.save.data.phtml
	- We now use HTTP_SERVER_VARS["HTTP_HOST"] instead of HTTP_SERVER_VARS["SERVER_NAME"]
	  throughout Ariadne (Thanks to Dino Termini)
	- Removed obsolete muze_small.gif from www/images/
	- Fixed the layout of wizard language selection.
	- The photobook thumbnail browse now defaults to $this->parent if the thumbnail path can
	  not be found. This prevents errors when opening the browse window.
	- Fixed hyperlinking images in the WYSIWYG editor
	- Fixed error reporting by system.new.phtml it now sets $this->error and returns false
	- Fixed saving of name and text properties for puser, the nls now correctly saves as 'none'
	- fixed a bug in the pfile wizard which broke the flow when using 
	  custom fields.
	- fixed a bug in view.thumb.html in pphotobook, you can now override
	  this template.
	- Fixed a bug in pobject::call(), the results are now unset every call()
	- Fixed a bug in mod_db.php which only allowed the default arguments to 
	  functions, where default arguments were defined.
	- Fixed a bug in the toolbar.php, it now shows the correct heading names.
	- Fixed copy/paste bugs in mod_db, you can now use the non-default options as well.
	- Fixed a bug in the editor, it broke when adding a hyperlink on an image.
	- Fixed a bug in the sql compilers, ordering via priorities is now again limited 
	  to an objects container (directory).
	- Fixed a bug in the mimemagic module, it now strtolowers() the file extension
	  before parsing it (Thanks to Johann Hanne).
	- Removed preg_replace() from the PINP allowed list, implemented preg_replace()
	  wrapper function in pobject (Thanks to Goran Topic).
	- Fixed saving of objects which don't have nls->default set.
	- Fixed eternal cache problem
	- Fixed class::function calling with pinp templates.	
	- Fixed caching of pages containing sessionids: we now cache those
	  pages in a seperate cache directory (session). All sessionids in such an
	  image are replaced with an {arSessionID} tag. These tags are replaced
	  with the active sessionid when an image gets send to the browser.
	- Fixed the pphoto::rotate function under windows (Thanks to Paul Meijers.
	- Added id check in pnewspaper so articles with the same id but different paths don't get added.
	- Fixed bug which did save a pgroup object even with an error.
	- Fixed bug in wizard/classic.html: now read $wgWizNextStep also from $ARCurrent
	- Double quotes are now correctly escaped in browse.nav.list.show.phtml
	- Added defaults for the image browse buttons in editor.ini
	- Fixed flow bug in the puser wizard.
	- Fixed LDAP login by moving the relogin feature out of puser/system.save.data.phtml.
	- Fixed a problem with html entities in names, thanks to Goran Topic.
	- Fixed a bug in GetValidGrants(): a group with grant modifiers in some cases
	  overwrote group grants without modifiers which caused the user (member of
	  both groups) to have less rights than expected.
	- Fixed a bug in ParsePage().
	- Fixed calenderitem: will now correctly remember the filled in date
	- A file uploaded by ftp will now only get the default name set
	- Changed grant requirement for saving priorities from 'layout' to 'edit'	
	- Fixed a bug in the editor.ini, setting hidebuttons to 0 doesn't work,
	  false does.
	- Fixed a 'bug' in the priority wizard, you now only need 'edit' grant
	  to save the priority. 
	- Fixed the PINP parents() function, so it actually does stop at the
	  currentsite().
	- Disabled passing of properties to system.save.data.phtml templates.
	- Fixed a bug in the editor with adding and removing hyperlinks, should now
	  always work as expected. Except for the known bug that MSIE will sometimes
	  appear to remove images when you want to include them in a link, the image is
	  still there, just invisible. This is a MSIE bug, currently no satisfactory 
	  workaround is available.
	- Fixed a javascript bug while browsing in icon mode through a photobook
	- Fixed 'object type' filter in the browse widget.


Changes in Ariadne since version 2.1.4

IMPORTANT: 
	The lib/configs/ariadne.phtml has changed slightly, please add
	your configuration changes to the new configuration file and use
	that instead of your existing one.

	If you update only the Ariadne code, please create a new group 'owner'
	in /system/groups/ manually.

    Since Ariadne 2.1 the internal charset has been changed to UTF-8. 
    If you want to import older .ax files (for upgrades) you
    need to read the docs/upgrade.txt file first.

New features:
	- Added Croatian translations. Thanks to Goran Topic.
	- Implemented Sophos AV support (tested on Unix) Thanks to Goran Topic.
	- HTTP/HTTPS switching, and secure login (while keeping the rest of the
	  site on standard HTTP) Thanks to Goran Topic.
	- Added Polish translation of the newspaper at login. Thanks to
	  Lukasz Keler.
	- Updated the logoff screen to new login layout. Thanks to Dino
	  Termini
	- Porganization and pperson now have manage.details.html templates.
	- Added new sql property syntax and behaviour for custom properties;
	  custom properties can now be addressed by my[.nls].[fieldname] and
	  can also be used in AND statements.
	- Added the ability to match multiple records per property.
	- Added "owner" group. The owner group is an alias for the object
	  owner. To change the owner of an object, use the 
	  system.save.owner.phtml template.
	- Every Ariadne user is now added to the group 'public' on runtime.
	- Added function 'ldGetClientVar()' which can be used by PINP scripts
	  to read certain 'loader variables'. Thanks to Florian Overkamp.
	- Added a new userfriendly image dialog to the WYSIWYG Editor.
	- Added debug streams: debugon(level,stream), debug(text,level,stream)
	- Added new mod_debug, debugging can now be tuned differently per
	  loader. Debugging is possible to loader, file and syslog.
	- ParseSummary() has a new (4th) argument; if false, it won't add a
	  'read more...' link.
	- Added Swedish translation by Niklas Koskela.
	- Added load() function. This allows you to load modules from the
	  lib/modules directory in pinp templates.
	- Added possibility to call functions on objects directly. This 
	  deprecates the call_object function. PINP will automatically insert
	  '_' before each function called. This means that you can also call
	  functions like ls() and find() directly on an Ariadne object, so we
	  changed system.get.phtml to check on read grants when called from
	  a pinp context. Yes you can now check whether a template is called
	  from a pinp (object) template or a php (class) template. The context
	  is available via the ($this->)arCallingContext variable, which can
	  currently either be 'php' or 'pinp'.
	- Added possibility to call functions of classes directly, if the class
	  is specifically written to allow this, like DB::connect(); See next
	  feature added.
	- Added PEAR DB wrapper, which allows you to access any database 
	  supported by PEAR DB, while keeping the store connection secure. 
	- The parents() function now defaults to currentsite() as the topmost 
	  object to be called. Explicitly set another top to prevent this.
	- Added editor configuration file 'editor.ini' which can be 
	  changed/overridden as	a pinp template.

Bugs fixed:
	- Removed the "overwrite" confirmation from the pfile wizard. It now
	  behaves exactly like every other object when the filename already
	  exists.
	- Fixed a bug in the store::find() function which made it impossible
	  to sort results without filling in the where clause first.
	- Added an error dialog to the pfile wizards, to inform the user about
	  virus infection (the current behaviour was to ignore the error, resulting
	  in an empty file, leaving the user wondering) Thanks to Goran Topic.
	- Fixed sessions cleanup in the bin/cleanup script. It now removes
	  more than 100 expired sessions per run.
	- Fixed a bug which made it impossible to rename e.g. '/Test/' to
	  '/test/'.
	- Fixed a bug causing the edit window not to close for pdir and
	  deratives. Thanks to Gustavo Ribeiro Amigo.
	- The HTTP_IF_MODIFIED_SINCE header was not parsed correctly. This
	  has been fixed by Johann Hanne.
	- Fixed the postgresqlstore's nextid() function.
	- Fixed the object not found errors when calling an object.delete,
	  object.copy etc via $this->get($path,"object...);
	- Fixed a problem with saving ppage (and deratives) objects over
	  existing objects.
	- Rename now unlocks() the renamed object.
	- Removed all occurances of $AR->host which caused Ariadne not to
	  work via some proxy configurations
	- Fixed the occurance of '0' grants when typing a space after
	  > + = - in grants.
	- Fixed an regex in the ftp loader for the detection of file extensions.
	- The ftp loader does now update objects while uploading files with
	  the same name instead of deleting them first.
	- Fixed a bug in the ftp loader which sometimes caused downloaded files
	  (in ASCII mode) to be corrupted.
	- Added a missing CheckConfig() to system.save.data.phtml of pfile.
	- fixed wizard widget bug: now you can use wgWizNextStep as an argument
	  in the URL (via GET) to step to the correct wizard step immediately.
	- fixed a bug in the save of particle, too long titles were not checked
	  properly. Thanks to Johan de Boer.

Changes in Ariadne since version 2.1.3

New features:
	- pobject now has a convertToUTF8() function which can
	  convert data from other charsets to UTF8.
	- No more need for preconfigged .zip or .tgz packages for
	  different OS types.
	- Added support for logging through phpOpentracker via
	  mod_stats. Other logging enginges can be added later on.
	  Thanks to Florian Overkamp.
	- Added XML RPC support via mod_xmlrpc. It uses the Pear
	  XML RPC library.
	- The default Ariadne installation now contains a more or
	  less complete list of countries for paddressbook.

Bugs fixed:
	- Fixed a warning when make_filesize() is called without
	  arguments.
	- Fixed order of CheckLogin/CheckConfig and argument passing
	  for some calendar templates
	- Fixed time out of public sessions: it will now reactivate those
	  sessions instead of showing a login window.
	- Removed iconv from mod_unicode.php, it was too unreliable.
	- Fixed a bug which caused customdata fields to be cleared.
	- Various layout and consistency fixes
	- Fixed a bug which caused --force to be ignored when other
	  flags were set in import/export.
	- Fixed consistency of Win32 and Unix configs
	- Restored 'read' grants for group 'users' on /system/ so that they
	  will be able to login again.

Changes in Ariadne since version 2.1.2

New features:
	- Added french translation of the default Ariadne databases.
	  (ariadne.ax and stripped.ax) Thanks to Arnaud Siminski.
	- Added italian translation of Ariadne, and the default Ariadne
	  database. Thanks to Dino Termini.
	- The tree is now interface dependant. Thanks to Paul Meijers.
	- IE only tab-key catching in the template editor. Thanks to
	  Dieter Struik.
	- The "Loading..." message in the tree now comes from the NLS.
	- There is now a make_filesize() function to create human
	  readable sizes. Example: 1 KB 2 M etc...
	- Added a show.poweredby.phtml template to pobject, so users of
	  Ariadne can easily show their sites are powered by Ariadne.
	- Import can now also update selected languages instead of all.

Bugs fixed:
	- Fixed a security related bug.
	- Importing with --without-grants will nolonger destroy
	  existing grants.
	- The default start and endtime calculation in pcalendar::get_items()
	  now works correct.
	- Fixed a bug using getvar() in pinp on a variable set to 0. Thanks
	  Karel-Henk Nijhuis.
	- Several small fixes in the WinXP interface. Thanks to Paul
	  Meijers.
	- get_nextid() was declared twice in axstore.phtml, removed one.
	- Logging of an already timed out session will nolonger give a
	  login prompt.
	- The old find query format now also supports the compare operators
	  used by the Ariadne query language.
	- Various layout bugs fixed.

Changes in Ariadne since version 2.1.1

New features:
	- Made the WYSIWYG editor NLS aware. This means that all the menu
	items etc are now displayed in your language. Available nls files
	for the editor are English and German. (Thanks to Johann Hanne).
	- Introducing a new config option named "$AR->hideSessionIDfromURL" which 
	disables the inclusion of the session id in the URL. 
	(Thanks to Johann Hanne)
	- Added the ldGetServerVar() loader function to interface with
          HTTP_SERVER_VARS[] and dummy variants for the non-http loaders.
	- Windows opened from the Menu (using the arshow() js function) do
	  now have unique names containing the session this will allow users
	  to have multiple template editors open given a different session
	  for each editor.
	- French translation of Ariadne by Arnaud Siminski

Bugs fixed:
	- The postgresql locking module didn't use table prefixes in the
	"lock update" query which caused an 'unkown table' reference. (thanks 
	to Christoph Nelles for giving
	us access to his postgresql installation).
	- Fixed the postgresql find() function; it now uses the 'limit' and
	'offset' statements instead of only the 'limit' statement.
	- Fixed bug in make_url(); using the optional paramaters of make_url()
	made it generate an invalid url. (Thanks to Johann Hanne)
	- The admin login is nolonger case sensitive.
	- The axstore now receives correct error messages from mod_tar.
	- Passing the QUERY_STRING through user.login.html under IIS now
	  works. See ldGetServerVar().
	- When creating a new shortcut the browse... button now points to an
	  existing path.
	- After getting an error when saving a pinp template the editor
	  nolonger forgets type, function and language.
	- The axstore now cleans up its mess after updating an .ax file.


Ariadne 2.1.1
Changes in Ariadne since version 2.1
New features:
	- The experimental soap layer now has support for arrays.

Bugs fixed:
	- Make_url() was fixed, non-existing paths caused an infinite loop.
	- count_find() was fixed. It now returns more than 100 results if
	  needed.
	- Trying to create a new object with an already existing filename
	  will return errors now.


Ariadne 2.1
Changes in ariadne since version 2.0

WARNING: Ariadne 2.1 its internal charset has been changed to UTF-8. 
         If you want to import older .ax files (for upgrades) you
         need to read the docs/upgrade.txt file first.

New features:
	- Ariadne's internal characterencoding is now set to UTF-8.
	- Added a new 'WinXP' interface (v0.3), by Chris van de Steeg.
	- Added a new, rewritten PINP compiler, which should be much more secure.
	- Added profiles for users (pprofile), by Gabriel Wicke.
	- Added the combine method to pphoto class, which allows multiple images to be
	  combined into a single image.
	- Improved session functionality:
	  - Ariadne is now able to respawn a session on a cookie only.
	  - When a session expires, available POST and GET information will be 
	    saved and restored after a succesful re-authentication.
	- Added zlib output compression support to the www loader.
	- Added support for PEAR's TAR to the axstore.
	- Added support for integrating a virusscanner into Ariadne by Florian Overkamp.
	- Added experimental SOAP support.
	- Added character conversion functionality to the import and export
	  utilities.
	- Added line numbers in the template editor. Internet Explorer only.
	- Improved WYSIWYG editor image and URL dialogs.

Bugs fixed:
	- Many bugfixes in the MSSQL store by Pascal Hofstee
	- Updated NLS files and replaced static error messages with their
	  NLS equivalents.
	- Property deletion: properties weren't deleted upon object removal because of a typo.
	- Fixed MySQL session updates (Thanks to Hanne Johann)
	- Changed AddSlashes to AddCSlashes so we do not depend on PHP's
	  default escaping mechanism (it clashed with the MSSQL settings)
	- It's now possible to run PHP with 'register_globals' set to off.
	- Logged in users can know change their passwords without being forced
	  to relogon.
	- Fixed copying and renaming of user objects.
	- Fixed numerous special character bugs.
	- Fixed importing templates: template are now compiled instead of copied.
	- Fixed a security bug.
	- and numerous other bugs.

Changes in ariadne since version 2.0RC3

New features:
	- Simplified the configuration procedure
	  - Ariadne is now compatible with the default PHP configuration.
	- Added experimental support for MSSQL server. Thanks to Richard Banks.
	- Improved look and feel:
	  - Items in the browse view and in the tree now have the full name 
	    of the item as title, which shows up as a yellow 'popup' in 
	    Internet Explorer. 
	  - New icons for many of the object classes. Thanks to KDE.
	  - The toolbar now visually shows which view you have selected.
	  - Added page view and webpage view. The page view shows the $nlsdata->page 
	    data, for those objects supporting it, the image in the case of a pphoto.
	    webpage view loads the view.html template in the browse frame.
	- Improved support for IE6 and Mozilla 0.9.9+ and even Konqueror.
	  - The login screen now shows a second login form below the popup, 
	    specifically for Mozilla's anti-popup feature.
	- Performance optimizations in the loader, getting objects from the
	  cache is now much faster.
	- Sessions that are still valid (not timed out) will automatically 
	  be resumed whenever the 'public' grants are insufficient. 
	- Improved the WYSIWYG source view mode, it now keeps source code 
	  formatting as close as possible to the original.
	- You can now save HTML files directly to ppage objects via FTP.
	- You can now call edit.object.html.phtml directly on an object, this
	  will start the html editor on that object. Together with session
	  respawning and a javascript bookmarklet this allows a pretty usefull
	  interface to Ariadne. Just press a button to edit the page you are
	  currently looking at.
	- Added a $arCloseWindow argument to the new object wizard. If set, the 
	  popup window is closed on save, instead of showing the type selection 
	  window again.
	- Added the HTTPRequest method, it will be rewritten for Ariadne 2.1 
	  though, so use it with care.
	- Added a 'not like' operator to find(): '!~'.

Bugs fixed:
	- Fixed some cache related problems: 
	  - Full cache headers are set, so image roll overs now work correctly.
	  - Private files set only the private cache header, so they won't
	    be cached in proxies.
	  - Content-Length header is set, for cacheable pages only.
	- Arguments in the find() query may now be 0 (and won't be changed to '').
	- Fixed the session timeouts, sessions will now actually time out :)
	- Fixed a serious bug with regard to the nextid function. Importing, 
	  copying and moving objects will now correctly set the nextid for the 
	  target directory. This prevents new objects from overwriting existing
	  ones, when the default '{5:id}' filename is used.
	- Fixed postgresl support, which was broken in RC3.
	- Shortcuts may now be relative, calculated from the parent.
	- Fixed a problem when calling templates of specific classes, using 
	  class::template. The class definition is now loaded before trying
	  to find the superclass, when needed.
	- Fixed some problems in recurse (delete, copy, etc.) with special 
	  (unicode) characters.
	- Images and links in the editor are now parsed (changed to {arRoot}...)
	  more robustly.
	- Fixed a bug when deleting linked objects with templates. Templates
	  must only be removed when the last node pointing to an object is deleted.


Changes in ariadne since version 2.0RC2

New features
    - WYSIWYG editor:
      - automatic utf-8 character translation to html unicode entities
      - source view now keeps the original formatting intact.
      - added character composition for special characters
    - Extended the name property length to 128 (from 50)
    - The pphoto class uses new stack based manipulation functions, for
      improved performance.
      WARNING: This is incompatible with the previous pphoto class,
      update your templates.
    - Added a $ARCurrent->ARDontCache variable, which prevents templates
      from becoming cached. (putvar('ARDontCache',true) in object 
      templates)
    - Added a toolbar for the file/children list in the manage template. 
      This allows you to browse through very large directories.
    - Added a preview on image uploads. Thanks to Gabriel Wicke.
    - Added download links for files in the manage view.

Bugs fixed:
    - fixed some installation problems with Windows
    - UTF-8 characters are now properly displayed in the tree
    - user id's and group id's may now overlap
    - you can now override the default language select page
    - import/export
      - now check user grants for completeness
      - keep the automatic id counter up to date.
    - todo list of the calendar has been fixed.
    - fixed some javascript problems in MSIE6
    - fixed a large performance problem with the MySQL and PostgreSQL store,
        the stores now makes better use of the indexes.
        Thanks to Sebastiaan Smith
    - fixed numerous compatibility problems between the FTP server and some
        ftp clients.
    - fixed the type list (used by implements()): pdir didn't implement 
      ppage.
    - fixed some problems with broken shortcuts.
    - fixed the order in which templates are retrieved. Ariadne searches 
      for templates first by path, then by inheritance. 
      E.g. a template defined for pobject will override a template for 
      ppage on a page object, if that template is defined closer by.


Changes in ariadne since version 2.0RC1

New features:
	- added polish translation of Ariadne, thanks to Lukasz Keler.
	- exporting and importing can now be optionally restricted to
	  exclude either data, files or templates, in any combination. This
	  allows you to only ex/import data, keeping the site layout the
	  same, or vice-versa, just updating the site layout.
	- added the functions ParsePage, GetPage to ppage, and ParseFile 
	  and GetFile to pfile.
	- because of a name conflict, the variable $data->customdata is
	  renamed to $data->custom. The shortcuts $customdata and 
	  $customnlsdata remain the same however.
	- added system.new.phtml, which allows you to create new objects
	  silently from inside pinp templates.
	- puser no longer implements pdir, the class tree is unchanged 
	  however. To effect this change you will need to install a fresh
	  Ariadne and import your old site into it.
	- The ftp daemon has it's own configuration directory now. You can
	  add ftp servers per psite or one for the entire ariadne system.

Bugs fixed:
	- fixed WYSIWYG HTML Editor support for non ISO-8859-1 languages.
	- fixed a problem with regexp's in Redhat/Mandrake and Win2K.
	- fixed a problem with missing templates in pshortcut. Priorities
	  should now work as expected on them.
	- $arResult now works as expected in pinp templates.
	- fixed a security problem in pinp
	- fixed some problems with customdata, it seems to work now :)
	- fixed the layout for the grants and templates list, it will now
	  display a scrollbar when the list gets too large.
	- fixed the magic_quotes_gpc on support.
	- fixed some problems with special characters in object names.
	- fixed bugs in deleting or moving users. Grants are now cleaned
	  up correctly. You cannot move or delete the admin and public user
	  and you cannot move a user out of the /system/users/ directory.

Changes in ariadne since version 2.0b11

New features:
    - All dialogs and menu options are available and should work
      correctly. Copy, move, delete and link are fully implemented.
      Import and export now work via the webbrowser too. Online help
      is available although not yet complete.
    - New layout of the default views, the manage templates and wizards. 
      New icons (KDE) and New pull-down menu, using HierMenu, 
      thanks to Gabriel Wicke.
    - pphotobook and pphoto: switched to ImageMagick. Simply install 
      the binaries and add the path to the programs in the ariadne.phtml 
      config. This change instantly makes Ariadne compatible with most 
      known image formats and allows for much better thumbnails. Thanks 
      to Florian Overkamp for most of the testing and code.
	- property text and name now have an nls value too. 
      Used as $criteria["name"]["nls"]["="]="'$nls'"; with find().
	  *IMPORTANT* This requires a modification of existing Ariadne stores. 
      The easiest way is to export the website, clear the databases, run 
	  install.php from this version, and then import the website again.
	  Alternatively with MySQL you can run the following SQL statements:
		mysql> alter table prop_name add AR_nls varchar(4);
		mysql> alter table prop_text add AR_nls varchar(4);
    - Full support for either PostgreSQL or MySQL. Easily configured per 
      store.
    - Support for single database installation. If you have an account
      with access to a single database (not database system), store and
      session data can be stored in that database using different table
      prefixes.
    - Support for magic_quotes_gpc. If set, the loader will fix all input. 
      This does cost performance though.
    - new search query language for use with find(). You can now enter
      search criteria as a string like "name.value ~= '%test%' and 
      object.implements = 'particle'"
    - added an ftp daemon written in PHP :) This allows you to up- or 
      download into ariadne directly. Still experimental, but we've
      been using it ourselves for some time now.
    - added some default properties upon each save: owner.value and 
      time.ctime, time.mtime and time.muser. Owner is the login of the
      user that created the object, ctime is the creation time, mtime
      the lastmodified time and muser the login of the user that made
      the last change.
    - added customdata: this allows you to add your own data fields to
      classes starting from a point in the tree. You can access this data
      via the $customdata and $customnlsdata arrays.
    - many other minor changes.

Bugs fixed:
	- make_url now uses the default ariadne root when CheckConfig()
	  hasn't been run first.
	- the wysiwyg htmleditor is fixed in numerous ways, but still
      not completely. Images won't dissappear after adding a hyperlink
      on them. Special characters won't dissappear after saving. Source 
      view still sucks.
    - and many more bugs.

Changes in ariadne since version 2.0b10

Ariadne 2.0b11 is mainly a bug-fix release.

New features:
	- Added an option to prefix the mysqlstore-tables. This will allow
	ariadne to run both the normal- and sessionstore from the same database.
	The prefix can be set in the session.phtml configuration file.
	- Added the PINP interface method pobject::_checkgrant(<grant>).
	This function is an interface to pobject::CheckSilent(<grant>).
	- Added control structure 'foreach' to the allowed PINP functions. 
	- Added the ax command 'axlist' to the bin directory. This util
	will show you the contents of an ax-file. 

Bugs fixed:
	- Removed dependecies for the DelGrant.phtml include file. This
	will fix the problems which users experienced while adding/configuring
	new user objects.
	- Fixed a problem which occured while removing ax tempory directories:
	Directories could not be deleted when their name was "000" (zero), this
	evaluated as false.
	- Several minor problems.


Changes in ariadne since version 2.0b9

This release introduces a lot of new features and changes since the previous
version. While this means some more work to do when upgrading, it also means
a lot more power and a lot less headaches compared to beta 9. Since not
every screen of the user interface is finished, we couldn't call it a
release candidate yet, but the next release will be RC1. (Unless someone
finds a really obnoxious bug...)
Please see the file 'UPGRADING' on notes for upgrading older systems to
2.0b10.


New Features
  - PSite: With this object and the Apache Alias/Rewrite engine, you can
    host multiple sites in one Ariadne tree, all with their own domain or
    directory. E.g. our own website runs ariadne.muze.nl and www.muze.nl
    from one ariadne tree. 
  - PPhotobook: The photobook automatically generates thumbnails of
    images and allows easy navigation. Requires GD and Gif2Png.
  - The HTML Editor has a new image dialog, you can now select images from
    the ariadne tree to insert into a page.
  - Private Cache. Normal (page) caching can only be used when the page is 
    accessed by the user 'public'. With the private cache, you can now
    cache (parts of) a page, while still keeping the cache image 'private'.
    See the functions 'cached()' and 'savecache()'.
  - New interface almost finished. All objects can now be created, edited
    and removed via wizards. Most items in the pull down menu work. Copy and
    delete work recursively.
  - 'Classic' interface has also received a facelift.
  - Priority field per node allows custom ordering of nodes. You can now
    order your menu exactly the way you want without any extra code.
  - We've added a new store layer for PostgreSQL. It requires PostgreSQL 7
    or higher. If you want to use it, you will have to manually include it in
    the loader and a few other places. Full instructions will appear on our
    website shortly.


- Templates:
  - Object templates are automatically inherited to subclasses, just like
    Class templates. This means that a template defined for 'pobject' will
    also work on a ppage.
  - default.phtml class template is no longer neccessary
  - You can call templates from other classes by prepending 'classname::' to
    the template name. e.g. call('pobject::show.html');
  - All templates have been cleaned up and fitted into the new naming
    scheme. It should be much easier to find the correct template for each
    function:
    	system.*	lowest level templates. They will not output
			anything, but will only return values or errors.
	classic.*	templates used by the classic interface.
	object.*	templates accessed via the object menu
	edit.*		templates accessed via the edit menu
	view.*		templates accessed via the view menu
	help.*		templates accessed via the help menu
	manage.*	templates used by the default manage views per class.
	


- Installation:
  - Easier configuration, the configuration files are more readable and contain 
    better default values.
  - More robust installation. The install script checks for a number of
    failure conditions and hopefully delivers better error messages.


- Important Bugfixes:
  - Cache, now uses output buffering and actually works.
  - HTMLEditor now displays the correct paragraph styles even in non-english 
    browsers, thanks to Matt Finn, NETDesign Inc.
  - Files, templates and private cache files are now accessed via a
    filestore. This filestore saves the file sper object id, not per node path.
    This fixed an important problem in 2.0b9, where linking objects could get ou
    in trouble quick. Also this means that you can now build a database driven
    filestore, which makes it easier to run ariadne on a distributed system
    (multiple webservers with one (or more) database servers).

- Optimizations:
  - CheckLogin and CheckConfig have gotten a big boost by caching the data
    per node. This means that you can generate more complex pages with much
    less performance penalty than before. The price is a small loss in
    performance for very simple pages.



Changes in ariadne since version 2.0b8

- Added pinp functions:
	_get_addresses and _call_address

- lib/modules/mod_ax.phtml
	- system() commands are now checked by exitcode
	instead of the result of the command (output).

	- added $this->RmDir() which deletes directories
        even when these contains files.
	This eliminates the need for the system "rm -rf " call.

	- fixed problem with importing files:
	importfiles tried to untar even if there wasn't a tgz file available.


Changes in ariadne since version 2.0b7

  This is mainly a bugfix release. 

The following features were added:
- Client-side cache headers are now sent (if caching is enabled). These 
  default to an expiration time of one hour, unless the server side cache
  expires earlier.
- Shift-reload now refreshes a cache image on the server.
- A few PINP functions were added:
  startsession(), putsessionvar($varname, $varvalue), 
  getsessionvar($varname), killsession() and sessionid()
- objects now save the languages they are available in as:
  $this->data->nls->list[$nls]=$language;
  This can be accessed in object templates as:
  <pinp> while (list($nls, $language)=each($data->nls->list)) { ... } </pinp>

The following bugs were fixed:
- Changing your password now automatically logs you in again under your new
  password.
- The recursive delete now asks for confirmation and actually seems to work.
- import and export now give more meaningfull error messages.
- Caching of objects in multiple languages works.
- index.html objects in a directory can now be cached.
- particle->parse_summary() is fixed.
- Textarea's now also wrap in netscape
- The WYSIWYG editor now works with particle.
- pobject->setnls has been fixed.
- Session ID's sometimes contained illegal characters, fixed.

Changes in ariadne since version 2.0b6

  Quite a lot has changed since the previous version. We've added session
support, a new login system using sessions, a preview of the new user
interface  which makes use of a new wizard widget and dropdown
menu's (select 'new' as interface in your user's edit screen, there's
currently no way to reset this but via this template, so it's best to
remember the url :). 
  The new interface has also led to a more defined naming
scheme for class templates, if you look at the pobject templates you'll see
the difference. For now the old interface and the old templates are still
there, they will be removed though. 
  Also the new interface currently only supports Internet Explorer 4 or 
better or Netscape 4 or better. This is only required for users to use the 
new management interface though.

  Then there's the new WYSIWYG html editor (for Internet Explorer 4
and up users only, sorry :), better support for object templates (new and
improved PINP functions). We've also added a new addressbook application,
which is looking a bit bland right now, but is fully functional.

  If you look at the install script you'll see that it actually 'imports' a
data file (ariadne.2.0b7.ax) which contains all the data, including
templates and files, in the ariadne tree. In the bin/ directory you'll find 
an import and export script with which you can create and import these files
yourself. You will need to have php installed as an alternative shell
though. In the next release this functionality will also be available
through a webbrowser.
  The new install script allowed us to create a 'richer' startup database.
We will be using this to create an online help system, among other things.

  We've started using CVS for Ariadne, so if you want a more complete list
of changes, read the file CVS_ARIADNE on how to get public read access.

Pre CVS changes:

* Added import/export module, you can now import and export entire trees of
  data.
  Affected files:
  lib/templates/pobject/
    import.phtml
    export.phtml
    exportobject.phtml
  lib/includes/
    import.phtml
    export.phtml
  www/
    export.phtml   

lib/stores/mysql.phtml
  fixed a bug in the mod_lock init, password was reset to "" before the call
  to init.
  fixed a bug in the save method, saving an object under root did set root
  as parent of the object, parent is now "..". 

lib/templates/particle/save.phtml
lib/templates/particle/form.phtml
lib/templates/pscenario/select.html
  fixed a bug, if a scenario name was not the same as its filename articles
  using it wouldn't save their start and endtimes.
lib/templates/pscenario/form.phtml
  fixed a bug, buttons were always in english, changed to correct nls calls.
lib/templates/pcalitem/edit.phtml
  fixed a bug, forgot to use $ARnls to check for pressed buttons.

Changes in ariadne since version 2.0b5

* Migrated to PHP4. PHP3 is no longer supported, this is because PHP3 was
  really not suited to the complex jobs ariadne put it to. PHP4 is a lot
  easier on memory and performance. Also a few bugs were impossible to fix in
  PHP3.
  - AR_IMPORT is now replaced by include_once
  - all php files now have the extension .php

lib/templates/pshortcut/default.phtml
lib/templates/pshortcut/treeinit.phtml
lib/templates/pshortcut/treeload.phtml
  shortcut now supports relative paths. These paths are mapped to absoulte
  paths starting at the parent of the shortcut! Thus adding a shortcut in
  /system/users/admin/ to ../public/ will result in the computed path of
  /system/users/public/


* Added mod_lock , read lib/modules/mod_lock/README for more information
  affected files:
  configs/ariadne.phtml
  - configure and instantiate mod_lock as $AR->mod_lock
  modules/mod_lock.phtml
  - modlock class definition
  widgets/formlock/js.html
  - this file will be included by form templates. It will relock
    the object every $AR->mod_lock->lock_duration-60 seconds.
  includes/lock.phtml
  - locks calling object ($this->path), returns $arResult=false on failure,
    ($ARCurrent->locks[$this->path] will be stored with mod_lock result)
    will return $arResult=true on success.
  includes/unlock.phtml
  - unlock calling object
  include/viewlocks.phtml
  - Will generate a page with paths which locks calling object.
  include/delete.phtml
  - Locks whole tree
  include/save.phtml
  - Locks calling object
  templates/*/edit.phtml
  - will lock objects. If this can't be done, it will call
    include/viewlocks.phtml
  templates/*/form.phtml
  - includes widgets/formlock/js.html
  templates/*/UnLock.phtml
  - includes include/unlock.phtml
  template/*/Lock.phtml
  - includes include/lock.phtml


lib/objects/pobject.phtml
  $this->nlsdata is now a copy of $this->data->$nls, otherwise the nls
  changes in CheckConfig would not change $nlsdata in a template.
  
lib/templates/*/save.phtml
  bug fixed: Check on default language was incorrect ($this->nls instead of
  $ARconfig->nls->default)
  bug fixed: Now resets $AR->nls->list before trying to loop through it...

lib/widgets/nls/form.phtml
  bug fixed. Special characters in language names prevented that language
  from being selected in a form. This is now fixed. (Do not enter html
  entity codes for special characters in the nls configuration!)

lib/configs/ariadne.phtml
  added $ARConfig->nls=$AR->nls to make sure that this is always set.
  CheckConfig will still override this with local defaults.

www/install/install.php
  removed spurious ;'s in initialize(), some MySQL versions apparantly don't
  like that.

www/loader.php
  removed <?php_track_vars?> as it is no longer supported...

Changes in ariadne since version 2.0b4

lib/widgets/nls/form.phtml
  fixed a bug: now replaces all '"''s with &quot; in the hidden input field.
lib/widgets/htmledit/form.html
  changed the RawUrlEncode to change only " to &quot; in the hidden input
  field.
lib/widgets/htmledit/js.html
  removed the escape/unescape part of Set and GetHTML.

www/widgets/tree/root.phtml
  fixed a bug: now UpdateLinks also adds the correct flag image and font to
  each node.

files:
  added missing directory files/temp
  fixed a typo in pfile/form.phtml and updated the layout
  resized upload window to better fit the new pfile form.
  fixed a bug in pfile/delete.phtml: used $data->name instead of $data->filename

lib/templates/pobject/config.phtml
  fixed a bug: title now displays the name from $nlsdata instead $data.

Changes in ariadne since version 2.0b3

important

* Added support for multiple language sites. almost every object now has
  inbuilt support for this. This has precipitated some big changes in code.
  More information is in the file NLS.

general

  Changed IMPORT to AR_IMPORT. This solves the name conflict with php4.0b4+
  FIXME: convert to the new IMPORT function, when this is stable in php4

  Changed all scripts under www to extension .php3, as this is more common.

lib/objects/pnewspaper.phtml
  Changed the whole object (former object wasn't supposed to be released)
  added extra argument $max in get_articles (also for PINP)

lib/objects/particle.phtml
  Changed the whole object (former object wasn't supposed to be released)

lib/templates/pscenario/form.phtml
  Priority is now a property of pscenario and not of the displays

lib/objects/pobject.phtml
  Changed call(). It's arguments are now passed by value, instead of by
  reference. This solves the crash when using call with fixed strings.

lib/objects/puser.phtml
  Changed CheckPassword to add support for FreeBSD crypt. It now checks the
  format of the encrypted password. See also:

www/install/setadmin.php3
  Added because the normal crypted password for admin in install.php3 cannot 
  be used in the case of FreeBSD. After running install.php3, you need to run
  setadmin.php3 in this case.

lib/templates/pobject/EditTemplate.phtml
  Changed form to method=Post, as IE has a rather low limit on URL size.

lib/templates/pobject/RemoveTemplate.phtml
  Fixed a bug that caused all templates of the same name to be deleted when
  deleting one.

www/loader.php3
  Fixed a bug: arrays in forms with method=post wouldn't get passed to a
  template. Now even PHP4's multiple dimension arrays are passed correctly.
