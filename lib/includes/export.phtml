<?php
	if ($this) $store=&$this->store;

	require($store->code."modules/mod_ax.phtml");

	$mod=new mod_ax;
	if (!$error=$mod->open($ax_file,"",$store->files."temp/")) {
		if (!$store->exists($export_path)) {
			$error="err:exportpathdoesntexist";
		} else {
			$crit["object"]["implements"]["="]="'pobject'";
			$result=$store->call("exportobject.phtml","",$store->find($export_path,$crit,10000));
			$nodes=$ARCurrent->nodes;
			$objects=$ARCurrent->objects;

			$name=substr($export_path,strrpos(substr($export_path,0,-1),"/"));

			while (is_array($nodes) && (list($path,$object)=each($nodes))) {
				$path=$name.substr($path,strlen($export_path));
				$newnodes[$path]=$object;
			}

			$expData=new object;
			$expData->name=$name;
			$expData->nodes=$newnodes;
			$expData->objects=$objects;
			if (!($fp=fopen($mod->tempdir."/objects.data","w"))) {
				$error="err:cannotopenfile";
			} else {
				fwrite($fp,serialize($expData));
				fclose($fp);
				if ($export_path=="/") $export_path="/.";
				if (!($error=$mod->exportfiles("templates",$store->files."templates".$export_path))) {
					$error=$mod->exportfiles("files",$store->files."files".$export_path);
				}
			}

			if (($err=$mod->close()) && !$error) {
				// only export an error when there wasn't a
				// previous error
				$error=$err;
			}
		}
	}

?>