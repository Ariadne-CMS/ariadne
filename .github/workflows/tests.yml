---
name: CI/CD build in GitHub Actions

on: [ push ]

defaults:
  run:
    shell: bash

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ariadne
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Create test database with latin1_swedish_ci
        run: |
          mysql -h127.0.0.1 -uroot -proot -e \
          "CREATE DATABASE latin1db CHARACTER SET latin1 COLLATE latin1_swedish_ci;"

      - name: Show database collation
        run: |
          mysql -h127.0.0.1 -uroot -proot -e \
          "SELECT schema_name, default_character_set_name, default_collation_name \
           FROM information_schema.schemata \
           WHERE schema_name = 'latin1db';"

    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, curl, zip, gd, imagick, mysqli, pdo_mysql, pdo_pgsql
          coverage: xdebug
      - name: Configure Apache2
        run: |
          sudo sed -i "s/www-data/runner/" /etc/apache2/envvars
          sudo a2dismod mpm_event
          sudo a2enmod mpm_prefork php8.4 rewrite
          sudo sed -i "s/AllowOverride None/AllowOverride All/" /etc/apache2/apache2.conf
          sudo rm -rf /var/www/html
          sudo cp -r '${{ github.workspace }}/www/' '/var/www/html'
          echo '<?php $ariadne="${{ github.workspace }}/lib"; ?>' | sudo tee '/var/www/html/ariadne.inc'
          sudo systemctl start apache2
          sudo systemctl status apache2.service
      - name: Setup SVN
        run: |
          php -r "echo exec('whoami'); var_dump(is_readable('${{ github.workspace }}/lib/templates/pobject/'));"
          echo "<?php echo exec('whoami'); var_dump(is_readable('${{ github.workspace }}/lib/templates/pobject/'));" | sudo tee '/var/www/html/test.php'
          curl http://localhost/test.php
          sudo apt install lynx subversion imagemagick tidy
          svnadmin create '${{ github.workspace }}/files/temp/testsvn'
          svnadmin load '${{ github.workspace }}/files/temp/testsvn' < '${{ github.workspace }}/tests/svnrepo.log'
      - name: Cleanup vendor
        run: |
          rm -rf ${{ github.workspace }}/vendor/
      - name: Install dependencies
        uses: php-actions/composer@master
        with:
          args: --ignore-platform-reqs
#      - name: Run syntax test
#        continue-on-error: true
#        run: |
#          bash ./tests/syntax.sh '${{ github.workspace }}'
      - name: Install Ariadne
        run: |
          rm '${{ github.workspace }}/www/install/.htaccess'
          curl --data "language=en&step=step6&database=mysql&database_host=localhost&database_user=root&database_pass=root&database_name=ariadne&admin_pass=test&admin_pass_repeat=test&ariadne_location&enable_svn=1&enable_workspaces=0&install_demo=1" http://localhost/install/index.php
          sudo cat /var/log/apache2/error.log
      - name: Test demo site
        run: |
          cd ${{ github.workspace }}/tests/curl/
          export URL=http://localhost/
          export TMPDIR=/tmp/
          bash test-demosite.sh
