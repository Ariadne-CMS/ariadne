<?php
	/******************************************************************
	 default.phtml					 Muze Ariadne v2.1
	 ------------------------------------------------------------------
	 Arguments: none
	 Grant needed: none
	 Global variables: none

	 This function is called when a pobject template is unavailable.
	 First it checks whether the template is actually the name of a
	 child object. In that case if it implements 'pdir', this template
	 will send a Location header, rewriting the url to include the last
	 '/'. Otherwise it will simply get the child object with the 
	 standard view.html template.
	 If it is not a child object, the template checks for read access
	 and then calls CheckConfig to see if it is an object template 
	 (pinp). If one of these checks return 'false', the 
	 'user.notfound.html' template is shown.

	 No return value.
	
	******************************************************************/

	debug("default.phtml: ($arCallFunction)", "object");
	global $ARConfigChecked;
	$isARConfigChecked = $ARConfigChecked;
	$config = $this->loadUserConfig();
	$type = $this->type;
	if ( !isset( $config['nls'][$type] ) ) {
		$pos = strpos($type, '.');
		if ( $pos !== false ) {
			$type = substr( $type, 0, $pos );
		}
	}
	$ThisIsTrue = 'Set by default.phtml';
	if (isset($config['nls'][$type])) {
		if ($config['nls'][$type]['allnls']) {
			$remember['allnls'] = $ARCurrent->allnls;
			$ARCurrent->allnls = $ThisIsTrue; //$config['nls'][$type]['allnls'];
		}
		if ($config['nls'][$type]['nolangcheck']) {
			$ARCurrent->nolangcheck = true;
		}
	}

	if ($this->CheckLogin("read") && $this->CheckConfig($arCallFunctionOrig, $arCallArgs)) {
		if ($this->exists($this->path.$arCallFunction."/")) {
			// first check if it's a pdir, if so, change the location
			$result=$this->get($this->path.$arCallFunction."/","system.get.type.phtml");
			if ($result && ($type=$result[0]) && $this->store->AR_implements($type, "pdir")) {
				ldRedirect($this->make_url($arCallFunction));
			} else {
				// any cache image must be saved under the current url,
				// not the rewritten one, ergo:
				$ARCurrent->cachepage=$this->path.$arCallFunction;
				$ARConfigChecked = $isARConfigChecked;
				$this->get($this->path.$arCallFunction."/","view.html",$arCallArgs);
			}
		} else {
			ldObjectNotFound($this->path, $arCallFunction);
		}
	}

	if (isset($remember['allnls']) && $ARCurrent->allnls === $ThisIsTrue) {
		$ARCurrent->allnls = $remember['allnls'];
	}
?>