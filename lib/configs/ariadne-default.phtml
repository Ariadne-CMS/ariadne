<?php
	/*
		Ariadne Global defaults
		========================================================
		do not change values here, but put them in ariadne.phtml
		do not change values here, but put them in ariadne.phtml
		do not change values here, but put them in ariadne.phtml
		do not change values here, but put them in ariadne.phtml
		========================================================
	 */


	/**************************************************************************/
	/* Fill in the path from the document root to the ariadne www pages.      */
	/* The document root is the root directory in which all webpages reside   */
	/* Check the configuration of your webserver. This can change per site.   */
	/*                                                                        */
	/* Only fill in the path, starting in the document root, e.g. If the      */
	/* document root is '/var/www/', and the ariadne webpages are installed   */
	/* in '/var/www/ariadne/', then the correct entry is '/ariadne'.          */
	/**************************************************************************/

	if (!isset($AR)) {
		$AR = new baseObject;
	}

	if (!isset($AR->dir)) {
		$AR->dir = new baseObject;
	}

	if (!isset($AR->dir->www)){
		$AR->dir->www = '/ariadne';
	}

	if (!isset($AR->dir->install)){
		$AR->dir->install = '/';
	}

	if (!isset($AR->OS)) {
		$AR->OS = "";
	}
	/**************************************************************************/
	/* Dummy values for DB, prevents PHP 7.2 from complaining                 */
	/**************************************************************************/
	if (!isset($AR->DB)) {
		$AR->DB = new baseObject;
		$AR->DB->dbms     = "";
		$AR->DB->host     = "";
		$AR->DB->database = "";
		$AR->DB->user     = "";
		$AR->DB->password = "";
		$AR->DB->crypto   = "";
	}

	/**************************************************************************/
	/* Add extra PINP-Safe functions to the following Array                   */
	/**************************************************************************/

	if (!isset($AR->PINP_Functions)){
		$AR->PINP_Functions       = array();
	}

	$AR->PINPtemplate = '<?'.'php $arTemplateFunction = function(&$AR_this) {  $local = new ar_core_pinpSandbox($AR_this); ?'.'>%s<'.'?php }; ?'.'>';

	/**************************************************************************/
	/* Textualizer information                                                */
	/* Used to extract the text from various document formats for the purpose */
	/* of full-text indexing of documents. Required packages are indicated.   */
	/**************************************************************************/

	if (!isset($AR->Textualizers)) {
		$AR->Textualizers = Array(                                // Package:
			'pdf'     => '/usr/bin/pdftotext -q -raw FILE -',         // xpdf-utils
			'msword'  => '/usr/bin/antiword -w 0 FILE',               // antiword
		);
	}

	/**************************************************************************/
	/* If you want you can change the default server name below. You should   */
	/* only do this if the default setting doesn't work. e.g.:                */
	/*   $AR->host='your.host.com';                                           */
	/* NOTE: don't add the protocol (http://) or slashes at the end.          */
	/**************************************************************************/

	if (!isset($AR->host)) {
		$url = new \arc\url\Url('');
		$url->host = 'localhost';
		if (isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {
			$url->host  = $_SERVER['HTTP_X_FORWARDED_HOST'];
		} else if(isset($_SERVER['HTTP_HOST'])) {
			$url->host  = $_SERVER['HTTP_HOST'];
		}


		if (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS']=='on') {
			$url->scheme = 'https';
		} else {
			$url->scheme = 'http';
		}
		$AR->host = $url;
	}

	/**************************************************************************/
	/* Debug options: WEB, SYSLOG or BOTH                                     */
	/**************************************************************************/

	if (!isset($AR->DEBUG)) {
		$AR->DEBUG = "WEB";
	}

	/**************************************************************************/
	/* Whether or not to hide the session id from the URL                     */
	/* If enabled, Webalizer will make reasonable page hit statistics, but    */
	/* users will no longer be able to use 2 or more sessions within the      */
	/* same browser instance (they will have to start a new browser for each  */
	/* different session)                                                     */
	/**************************************************************************/

	if (!isset($AR->hideSessionIDfromURL)){
		$AR->hideSessionIDfromURL = false;
	}

	/* on Default we do not respawn sessions **********************************/
	if (!isset($AR->arSessionRespawn)){
		$AR->arSessionRespawn = false;
	}

	/**************************************************************************/
	/* Fill in the full path to the webservers document root below            */
	/* The default should work on most systems, but you can override it with  */
	/* an exact path if you need to. e.g.                                     */
	/*   $AR->dir->docroot='/var/www/';                                       */
	/**************************************************************************/

	if (!isset($AR->dir->docroot)) {
		$AR->dir->docroot = $_SERVER['DOCUMENT_ROOT'];
	}
	if (!isset($AR->dir->docroot)) {
		$AR->dir->docroot = '';
	}

	$AR->dir->www  = (string)\arc\path::collapse($AR->dir->www);

	/**************************************************************************/
	/* If you installed ariadne in your own homedirectory, e.g. under ~user/, */
	/* then change the following line to the full path of the ariadne www     */
	/* directory. e.g. :                                                      */
	/*   $AR->dir->root='/home/user/public_html/ariadne/';                    */
	/* Otherwise, don't change the default.                                   */
	/**************************************************************************/  

	if (!isset($AR->dir->root)) {
		$AR->dir->root = $AR->dir->docroot.$AR->dir->www;
	}
	$AR->dir->root = (string)\arc\path::collapse($AR->dir->root);
	if (substr($AR->dir->docroot, 0, 1) !== '/') {
	    $AR->dir->root = substr($AR->dir->root, 1);
	}

	/**************************************************************************/
	/* Only change this if you have made your own loader                      */
	/**************************************************************************/

	if (!isset($AR->root)) {
		$AR->root = $AR->dir->www.'loader.php';
	}

	/**************************************************************************/
	/* Only change this if you have moved the images directory                */
	/**************************************************************************/

	if (!isset($AR->dir->images)) {
		$AR->dir->images = $AR->dir->www.'images/';
	}
	$AR->dir->images = (string)\arc\path::collapse($AR->dir->images);

	/**************************************************************************/
	/* Only change this if you have moved the CSS styles directory            */
	/**************************************************************************/

	if (!isset($AR->dir->styles)) {
		$AR->dir->styles = $AR->dir->www.'styles/';
	}
	$AR->dir->styles = (string)\arc\path::collapse($AR->dir->styles);


	/**************************************************************************/
	/* NLS System                                                             */
	/* ==========                                                             */
	/* This contains the list of available languages. In Ariadne you can set  */
	/* the list of available languages per object/directory, selected from    */
	/* list below. Do not use html entities like &eacute;                     */
	/**************************************************************************/

	if (!isset($AR->nls)) {
		$AR->nls=new baseObject;                         // do not change
	}
	if (!isset($AR->nls->list)){
		$AR->nls->list['nl']      = 'Nederlands';
		$AR->nls->list['en']      = 'English';
		$AR->nls->list['es']      = 'Español';
		$AR->nls->list['de']      = 'Deutsch';
		$AR->nls->list['pl']      = 'Polski';
		$AR->nls->list['fr']      = 'Français';
		$AR->nls->list['it']      = 'Italiana';
		$AR->nls->list['sv']      = 'Svenska';
		$AR->nls->list['hr']      = 'Hrvatski';
		$AR->nls->list['pt']      = 'Português';

		$AR->nls->locales['nl']   = 'nl_NL';
		$AR->nls->locales['en']   = 'en_US';
		$AR->nls->locales['es']   = 'es';
		$AR->nls->locales['de']   = 'de';
		$AR->nls->locales['pl']   = 'pl';
		$AR->nls->locales['fr']   = 'fr_FR';
		$AR->nls->locales['it']   = 'it_IT';
		$AR->nls->locales['sv']   = 'sv_SE';
		$AR->nls->locales['hr']   = 'hr_HR';
		$AR->nls->locales['pt']	= 'pt_PT';
	}

	if (!isset($AR->nls->default)) {
		$AR->nls->default         = 'en';
	}
	/**************************************************************************/
	/* you really don't want to change anything below this line                  */
	/**************************************************************************/

	$ARConfig=new baseObject;                        // do not change

	/* make default nls available for the root ********************************/

	$ARConfig->cache['..']=new baseObject;           // do not change
	$ARConfig->cache['..']->nls=$AR->nls;        // do not change
	$ARConfig->cache['..']->root['path']='/';    /* must always start with a '/' */
	$ARConfig->cache['..']->root['value']=$AR->host.$AR->root;  // do not change
	$ARConfig->cache['..']->site='/';            // do not change
	$ARConfig->cache['..']->thumb['width']=40;   // do not change
	$ARConfig->cache['..']->thumb['height']=40;   // do not change
	$ARConfig->cache['..']->thumb['color']='EEEEEE';   // do not change

	/* register mimetype to class conversions *********************************/

	$ARConfig->cache[".."]->mimetypes['^image/']     = "pphoto";
	$ARConfig->cache[".."]->mimetypes['^text/html']  = "ppage";
	$ARConfig->cache[".."]->mimetypes['.*']          = "pfile";

	$ARConfig->cache[".."]->cacheSettings['serverCacheDefault'] = -1;

	/* what to generate on a mkdir in ftp context *****************************/
	// FIXME: build a better system for this, type dependant?
	$ARConfig->cache[".."]->FTP['mkdir']="pdir";

	$ARConfig->pinpcache[".."]["nls"] = array(
		"pphoto" => array( "allnls" => true, "nolangcheck" => true),
		"pperson" => array("allnls" => true, "nolangcheck" => true)
	);


	/**************************************************************************/
	/* Setup the variable repository for putvar/getvar                        */
	/**************************************************************************/

	$ARCurrent=new baseObject;                       // do not change

	/**************************************************************************/
	/* Global defines, used for the login functions, don't change these!      */
	/**************************************************************************/
	define('ARGRANTOLD', 1);
	define('ARGRANTLOCAL', 2);
	define('ARGRANTCHILDREN',4);
	define('ARGRANTGLOBAL', 6);
	define('ARMASKLOCAL', 3);
	define('ARMASKCHILDREN', 5);
	define('ARMASKGLOBAL', 7);
	define('ARTHISTYPE', 1); 
	define('ARANYTYPE', 0);

	/**************************************************************************/
	/* Misc. Global defines, don't change these!                              */
	/**************************************************************************/
	define('ARESCAPE', "'\"\\\n\r");
	define('ARCALLINGCONTEXT', 1);
	define('ARUNNAMED',null);
	define('ARBaseDir', AriadneBasePath.'/ar/');

	/**************************************************************************/
	/* Workaround for PHP 5.3 warning about date.timezone                     */
	/**************************************************************************/
	date_default_timezone_set( @date_default_timezone_get() );
