<?php
	if (!$ContentLanguage) {
		$this->error="Somehow there was no language set. This is a bug.";
	} else if (!$ARConfig->nls->list[$ContentLanguage]) {
		$this->error="Unknown language selected... weird";
	} else {
		if (!$page) {
			$page=$htmltext;
		}
		// only keep the body.innerHTML
		// $page=eregi_replace("^.*<body[^>]*>","",$page);
		// $page=eregi_replace("</body[^>]*>.*$","",$page);

		$arCheckCharSet=$ContentLanguage;
		if (!$AR->nls->charsets[$arCheckCharSet]) {
			$arCheckCharSet="default";
		}
		require_once($this->store->code."modules/mod_unicode.php");
		if ($AR->nls->charsets[$arCheckCharSet] == "ISO-8859-1") {
			//$page=utf8_decode($page);
			$page=unicode::utf8toiso8859($page);
			// now change special characters to their html entity
			// $page=htmlentities($page);
			// now change '<', '>', '"', '~' and '&' back.
			$page=str_replace("&lt;","<",$page);
			$page=str_replace("&gt;",">",$page);
			$page=str_replace("&quot;","\"",$page);
			$page=str_replace("&tilde;","~",$page);
			// do this last, think about it :)
			$page=str_replace("&amp;","&",$page);
		} else {
			$page=unicode::utf8convert($page);
		}
		// change hardcoded links and images to use a placeholder for the root
		$page=ereg_replace("(https?://)?".$this->store->root,"{arRoot}",$page);
        // also change hand pasted sources, which may or may not include session id's
        $page=ereg_replace("(https?://)?".$AR->host.$AR->dir->www."loader.php(/-".$ARCurrent->session->id."-)?(/".$nls.")?","{arRoot}",$page);
        // finally check for other session id's:
        $page=str_replace("/-".$ARCurrent->session->id."-","",$page);

		// first make sure that the object is clean (data can only be set via 
		// the defined interface: $arCallArgs)
		$this->data=@current($this->get(".","system.get.data.phtml"));
		$this->data->$ContentLanguage->page=$page;
		$this->save();
		$this->ClearCache();
	}
?>