<?php
	/******************************************************************
	 system.save.data.phtml                                Muze Ariadne
	 ------------------------------------------------------------------
 
	******************************************************************/

	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) && 
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
		    $this->data=current($this->get(".","system.get.data.phtml"));
		} else {
			$this->data=new object;
		}

		$authconfig = $parentobj->call("auth.ini");

		// unset the properties array, so no properties can be passed to this template.
		$properties = Array();

		$properties["value"][]["value"]="'".AddSlashes($value)."'";
		$this->data->name=$this->getdata("name","none");
		$properties["name"][]["value"]="'".AddSlashes($this->data->name)."'";
		$properties["text"][]["value"]="'".AddSlashes($this->data->name)."'";
		if ($this->arIsNewObject) {
			if ($login=$this->getdata("arNewFilename","none")) {
				if (strlen($login)>32) {
					$this->error=$ARnls["err:logintoolong"];
				} else {
					$criteria["login"]["value"]["="]="'".AddSlashes($login)."'";
				
					$loginexists = false;
					foreach ($authconfig['userdirs'] as $userdirpath) {
						$result=$this->find($userdirpath,$criteria,"system.get.phtml");
						if ($result) {
							$loginexists = true;
							break;
						}
					}

					if ($loginexists) {
						$this->error=sprintf($ARnls["err:loginexists"],$login);
					} else {
						if (ereg('\{.*\}',$login)) {
							$this->error=$ARnls["err:donotuseid"];
						} else {
							$this->data->login=$login;
							$properties["login"][0]["value"]="'".AddSlashes($login)."'";
						}
					}
				}
			} else {
				$this->error=$ARnls["err:mustenterlogin"];
			}
		}
		if ($language=$this->getdata("language","none")) {
			$this->data->language=$language;
		}
		if ($interface=$this->getdata("interface","none")) {
			$this->data->interface=$interface;
		}
		if ($editor=$this->getdata("editor","none")) {
			$this->data->editor=$editor;
		}

		$this->data->email = $this->getdata("email","none");
		$this->data->telephone = $this->getdata("telephone","none");

		$this->data->groups = Array();
		$groups = $this->getdata("groups", "none");
		if (is_array($groups)) {
			reset($groups);
			while (list($key, $val)=each($groups)) {
				if (substr($val, 0, 1) == "/") {
					$this->data->groups[$val] = $val;
				} else {
					$this->data->groups[$key] = $val;
				}
			}
		}

		if (!$this->error) {
			$this->save($properties);
			$this->ClearCache();
		}
	}
?>