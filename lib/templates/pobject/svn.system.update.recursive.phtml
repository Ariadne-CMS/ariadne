<?php
	echo "SSUR: " . $this->path . "<br>";

	if ($this->CheckLogin("layout") && $this->CheckConfig()) {
		$this->resetloopcheck();

		$fstore	= $this->store->get_filestore_svn("templates");
		$svn	= $fstore->connect($this->id, $username, $password);

		$repository = $svn['info']['URL'];

		if (isset($repository)) {
			echo "<br>";
			echo "Update for " . $this->path . "<br>";

			$repository = rtrim($repository, "/") . "/" . $repo_subpath;
			echo "Using repo: $repository<br>";

			// Update the templates.
			$result = $fstore->svn_update($svn);
			print_r($result);

			if ($result) {
				$templates = array();
				foreach ($result as $item) {
					$templates[] = $item['name'];
				}

				$this->call(
					"svn.system.compile.templates.phtml",
					array(
						'templates' 	=> $templates,
						'fstore'	=> $fstore,
						'svn'		=> $svn
					)

				);
			}

			// Run update on the existing subdirs.
			$arCallArgs['repoPath'] = $this->path;
			$arCallArgs['repository'] = $repository;
			
			$this->ls($this->path, "svn.system.update.recursive.phtml", $arCallArgs);

			// Create the dirs, restore them if needed.
			$dirlist = $fstore->svn_list($svn);
			if ($dirlist) {
				$arCallArgs['dirlist'] = $dirlist;
				$arCallArgs['svn'] = $svn;
				$arCallArgs['fstore'] = $fstore;
				$arCallArgs['repository'] = $repository;
				$this->call("svn.system.checkout.dirs.phtml", $arCallArgs);
			}
			flush();
		}
	}
?>