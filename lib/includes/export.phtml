<?php
	if ($this) $store=&$this->store;
	global $AR;
	require($store->code."modules/mod_ax.phtml");

	$mod=new mod_ax;
	if (!$error=$mod->open($ax_file,$AR->ax,"",$store->files."temp/")) {
		if (!$store->exists($export_path)) {
			$error="err:exportpathdoesntexist";
		} else {
		   if ($mod->openObjectsData("w+")) {
			$crit["object"]["implements"]["="]="'pobject'";
			$offset=0;
			while ($result=$store->call("object.export.phtml","",$store->find($export_path,$crit,100,$offset))) {
				$name=substr($export_path,strrpos(substr($export_path,0,-1),"/"));

				while (is_array($result) && (list($key,$object)=each($result))) {
					$path=$name.substr($object->path,strlen($export_path));
					$object->path=$path;
					$mod->writeObject($object);
				}

				$offset+=sizeof($result);
			}
			$mod->closeObjectsData();

			if ($export_path=="/") $export_path="/.";
			if (!($error=$mod->exportfiles("templates",$store->files."templates".$export_path))) {
				$error=$mod->exportfiles("files",$store->files."files".$export_path);
			}
			
		   } else {
			$error="err: can not open objects data file";
		   }
			if (($err=$mod->close()) && !$error) {
				// only export an error when there wasn't a
				// previous error
				$error=$err;
			}
		}
	}

?>