<?php
	/******************************************************************
	 system.save.data.phtml				 Muze Ariadne v2.1
	 ------------------------------------------------------------------
 
	******************************************************************/

	require_once($this->store->get_config('code')."modules/mod_page.php");

	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) && 
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
		    $this->data=current($this->get(".","system.get.data.phtml"));
		} else {
			$this->data=new object;
		}

		$this->error = null;

		// unset the properties array, so no properties can be passed to this template.
		$properties = array();

		if (!$this->getdata("name",$ARConfig->nls->default)) { // default language for this path
			$this->error = ar::error( sprintf($ARnls["err:nodatafordefaultlanguage"],$AR->nls->list[$ARConfig->nls->default]), 1101);
			$arResult = false;
		} else {
			$this->data->address=$this->getdata("address","none");
			$this->data->zipcode=$this->getdata("zipcode","none");
			$this->data->city=$this->getdata("city","none");
			$this->data->country=$this->getdata("country","none");
			$this->data->telephone=$this->getdata("telephone","none");
			$this->data->fax=$this->getdata("fax","none");
			$this->data->pobox=$this->getdata("pobox","none");
			$this->data->url=$this->getdata("url","none");

			$emails = $this->getdata("emails", "none");
			$rawemails = $emails;
			if (!is_array($emails)) {
				$emails=explode(",",$emails);
				if ($emails[0]) {
					$this->data->emails=$emails;
				} else {
					unset($this->data->emails);
				}
			}

			if (!$this->data->nls) {
				$this->data->nls=new object;
			}
			$this->data->nls->default=$ARConfig->nls->default;
			reset($AR->nls->list);
			$count=0;
			while (list($key, $value)=each($AR->nls->list)) {

				if ($this->getdata("name", $key)) {
					if (!$this->data->$key) {
						$newnlsdata=new object;
					} else {
						$newnlsdata=$this->data->$key;
					}
					if (!$this->getdata("name",$key)) {
						$this->error = ar::error( sprintf($ARnls["err:nonameentered"],$AR->nls->list[$key]), 1114);
					}
					$newnlsdata->name=$this->getdata("name",$key);
					$properties["name"][$count]["value"]=$newnlsdata->name;
					$properties["name"][$count]["nls"]=$key;
					$properties["text"][$count]["value"]=$newnlsdata->name;
					$properties["text"][$count]["nls"]=$key;
					$count++;
					$newnlsdata->summary=page::compile($this->getdata("summary",$key), $key);
					$properties["text"][$count]["value"]=$newnlsdata->summary;
					$properties["text"][$count]["nls"]=$key;
					$count++;
					if ($this->store->is_supported("fulltext")) {
						$properties["fulltext"][$count]["value"]=$this->store->format_for_fti(
								$newnlsdata->name." ".
								$newnlsdata->summary." ".
								$newnlsdata->title." ".
								$this->data->address." ".
								$this->data->zipcode." ".
								$this->data->city." ".
								$this->data->country." ".
								$this->data->telephone." ".
								$this->data->fax." ".
								$this->data->pobox." ".
								$this->data->url." ".
								$rawemails
								);
						$properties["fulltext"][$count]["nls"]=$key;
					}
					$this->data->$key=$newnlsdata;
					$this->data->nls->list[$key]=$value;
				} else { // clear language values for $key->name if set, keep the rest, just in case.
					if ($this->data->$key) {
						unset($this->data->$key->name);
						unset($this->data->nls->list[$key]);
					}
				}
			}

			$properties["address"][0]["street"]=$this->data->address;
			$properties["address"][0]["zipcode"]=$this->data->zipcode;
			$properties["address"][0]["city"]=$this->data->city;
			$properties["address"][0]["country"]=$this->data->country;
			if (!$this->error) {
				$arResult = $this->save($properties);
			} else {
				$arResult = false;
			}

			global $cache_config;
			$cachestore=new cache($cache_config);
			$cachestore->onObjectSaved($this->id);
		}
	}
?>