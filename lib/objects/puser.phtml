<?php
    /******************************************************************
     puser.phtml                                           Muze Ariadne
     ------------------------------------------------------------------
     Author: Muze (info@muze.nl)
     Date: 31 october 2002

     Copyright 2002 Muze

     This file is part of Ariadne.

     Ariadne is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published 
     by the Free Software Foundation; either version 2 of the License, 
     or (at your option) any later version.
 
     Ariadne is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with Ariadne; if not, write to the Free Software 
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  
     02111-1307  USA

    -------------------------------------------------------------------

     Class inheritance: 	pobject > ppage > pdir > puser
     Description:

       This is the class definition file of the puser class.

    ******************************************************************/

debug("puser: Load","object");
include_once($this->code."objects/pdir.phtml");

class puser extends pdir { // puser class definition

	function CheckPassword($password) {
		debug("puser: CheckPassword([password])","object");
		$password=ARCrypt($password);
		return $password==$this->data->password;
	}

	function GetGrants($path, &$result) {
		debug("puser: GetGrants($path, result)","object");
		debug("$path; ".$this->path."; ".serialize($this->data->config->usergrants[$path]));
		if ($this->data->config->usergrants[$path]) {
			reset($this->data->config->usergrants[$path]);
			while (list($grant, $value)=each($this->data->config->usergrants[$path])) {
				$result[$grant]=$value;
			}
			return true;
		}
		return false;
	}

	function FindGrants($path, &$result, $top="", $mask=ARMASKLOCAL) {
		// ARMASKLOCAL and ARMASKGLOBAL are needed for backwards
		// compatability with pre 2.0RC1 versions of Ariadne.
		// Grants there are either true or 1, both of which
		// are byte(1) and should match global and local grants.
		debug("puser: FindGrants($path, result)","object");
		debug("(in $this->path)","object");
		$newpath=$path;
		if ($path==$top) {
			$newpath="";
		} else {
			if (isset($this->GrantsCache[$this->path][$path])) {
				$newpath=$this->GrantsCache[$this->path][$path]["setby"];
				$result=$this->GrantsCache[$this->path][$path]["grants"];
			} else if ($path && !$this->GetGrants($path, $result)) {
				if ($path=="/") {
					$newpath="";
				} else {
					$newpath=$this->store->make_path($path, "..");
					$newpath=$this->FindGrants($newpath, $result, $top, ARMASKCHILDREN);
				}
				$this->GrantsCache[$this->path][$path]["grants"]=$result;
				$this->GrantsCache[$this->path][$path]["setby"]=$newpath;
			} 
			if (is_array($result)) {
				while (list($grant, $modifiers)=each($result)) {
					if (is_array($modifiers)) {
						while (list($modifier, $value)=each($modifiers)) { 
							if (!($value & $mask)) {
								unset($result[$grant][$modifier]);
							}
						}
						if (!@count($result[$grant])) {
							unset($result[$grant]);
						}
					} else if (!($modifiers & $mask)) {
						unset($result[$grant]);
					}
				}
			}
		}
		return $newpath;
	}

	function copyto($target) {
		$this->error=$ARnls["err:usercannotbecopied"];
		return false;		
	}

} // end of puser class definition
?>