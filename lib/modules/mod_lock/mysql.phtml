<?php
/**************************************************************************
	mod_lock v1.0b						MySQL

	table layout:

	Table locks
	+----------+---------------+------+-----+---------+-------+
	| Field    | Type          | Null | Key | Default | Extra |
	+----------+---------------+------+-----+---------+-------+
	| release  | int(11)       |      | MUL | 0       |       |
	| type     | enum('O','T') |      | MUL | O       |       |
	| identity | varchar(23)   |      | MUL |         |       |
	| path     | varchar(127)  |      | MUL |         |       |
	+----------+---------------+------+-----+---------+-------+

**************************************************************************/


class mysqllock {

	function mysqllock() {
        debug("mysqllock::mysqllock()");
        debug("mysqllock::mysqllock end","all");
	}

	function connect($host="localhost",$user="root",$password="") {
        debug("mysqllock::connect($host, $user, [password])","store");
		$this->mayClose=true;
		$this->host=$host;
		$this->user=$user;
		$this->password=$password;
		$this->connectid=mysql_pconnect($host,$user,$password);
        debug("mysqllock::connect end","all");
	}

	function select_db($database="modules", $connectid=false) {
	debug("mysqllock::select_db($database, $connectid)");
		$this->database=$database;
		if ($connectid!==false) {
			$this->connectid=$connectid;
		}
	debug("mysqllock::select_db end");
	}

	function get_locks($identity) {
        debug("mysqllock:get_locks($identity)","store");
		$query_string="select path,release, type, identity from locks where 
		release >=".time()." and identity='".AddSlashes($identity)."'";
		$query=@mysql_db_query($this->database, $query_string,$this->connectid);
		while ($temp=@mysql_fetch_array($query)) {
			$result[$temp["path"]]=$temp;
		}
        debug("mysqllock:get_locks end","all");
		return $result;		
	}

	function lock($identity, $path, $type="O", $time=0) {
	/**********************************************************************
		This function locks an object/path
	**********************************************************************/
        debug("mysqllock:lock($identity,$path,$time,$type)","store");
		if (!$time) {
			$time=time()+$this->lock_duration;
 		}
		// lock table first
		$query_string="lock tables locks write";
		@mysql_db_query($this->database, $query_string,$this->connectid);

		// check if there is no parentlock :)
		$query_string="
		select path, release, type, identity from locks where
		(				
			( path=substring('".AddSlashes($path)."',1,length(path)) AND
			  type='T' ) OR
			( path='".AddSlashes($path)."' )
		) ";

		// if we are locking a whole tree we must check if no
		// child has been locked
		if ($type=="T") {
			$query_string.="
			OR ( path like '".AddSlashes($path)."%' )
			";
		}

		// see if this lock is still alive
		$query_string.="AND release>=".time();
		$query=@mysql_db_query($this->database, $query_string,$this->connectid);
		$result=@mysql_fetch_array($query);

		if (!$result || ($result["identity"]==$identity)) {
			if (!$result) {
				$query_string="
				insert into locks (path, release, type, identity) values (
				'".AddSlashes($path)."', $time, '".AddSlashes($type)."',
				'".AddSlashes($identity)."')";
			} else {
				$query_string="
				update locks 
				set release=$time,
				type='".AddSlashes($type)."' where
				path='".AddSlashes($path)."' and
				identity='".AddSlashes($identity)."'";
			}

			unset($result);
			mysql_db_query($this->database, $query_string,$this->connectid);
		}

		$this->lastLock=$result;

		$query_string="unlock tables";
		mysql_db_query($this->database,$query_string,$this->connectid);

		return $result;
	}

	function unlock($identity,$path="") {

		$query_string="delete from locks where identity='".AddSlashes($identity)."'";
		if ($path) $query_string.=" and path='".AddSlashes($path)."'";
		mysql_db_query($this->database, $query_string, $this->connectid);

	}

	function close() {
		if ($this->mayClose) {
			mysql_close($this->connectid);
		}
	}

	function init() {
		$query_string="
CREATE TABLE locks (
        release int NOT NULL,
        type enum('O','T') NOT NULL,
        identity varchar(23) NOT NULL,
        path varchar(127) NOT NULL,
  key (release),
  key (type),
  key (identity),
  key (path)
)";
		mysql_db_query($this->database, $query_string, $this->connectid);
	}
}
?>