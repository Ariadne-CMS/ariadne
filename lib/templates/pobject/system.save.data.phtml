<?php
	/******************************************************************
	 system.save.data.phtml				 Muze Ariadne v2.1
	 ------------------------------------------------------------------
 
	******************************************************************/

	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) && 
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
			$this->data=current($this->get(".","system.get.data.phtml"));
		} else {
			$scaffold = ar::getvar('scaffold');
			if ($scaffold && ar::exists($scaffold)) {
				$this->data = current(ar::get($scaffold)->call('system.get.data.phtml'));
			}
			if (!isset($this->data) || ar_error::isError($this->data)) {
				$this->data = new baseObject;
			}
		}

		$this->error = null;

		// unset the properties array, so no properties can be passed to this template.
		$properties = array();

		$this->data->value=$this->getdata("value","none");
		$indexValue = $this->data->value;
		if (is_array($indexValue)) {
			$indexValue = '|' . implode( '|', $indexValue ) . '|';
		}
		$properties["value"][]["value"]=$indexValue;
		if (!$this->getdata("name",$ARConfig->nls->default)) { // default language for this path
			$this->error = ar::error( sprintf($ARnls["err:nodatafordefaultlanguage"],$AR->nls->list[$ARConfig->nls->default]), 1101);
			$arResult = false;
		} else {
			if (!$this->data->nls) {
				$this->data->nls=new baseObject;
			}
			$this->data->nls->default=$ARConfig->nls->default;
			$this->data->scaffold = $this->getdata('scaffold','none');
 
			reset($AR->nls->list);
			$count=0;
			while (list($key, $value)=each($AR->nls->list)) {

				if ($name=$this->getdata("name",$key)) { 
					if (!$this->data->$key) {
						$newnlsdata=new baseObject;
					} else {
						$newnlsdata=$this->data->$key;
					}
					$newnlsdata->name=$name;
					$properties["name"][$count]["value"]=$newnlsdata->name;
					$properties["name"][$count]["nls"]=$key;
					$properties["text"][$count]["value"]=$newnlsdata->name;
					$properties["text"][$count]["nls"]=$key;
					$count++;
					if ($this->store->is_supported("fulltext")) {
						$properties["fulltext"][$count]["value"]=$this->store->format_for_fti(
								$newnlsdata->name." ".
								$this->data->value
								);
						$properties["fulltext"][$count]["nls"]=$key;
					}
					$this->data->$key=$newnlsdata;
					$this->data->nls->list[$key]=$value;
				} else { // clear language values for $key->name if set, keep the rest, just in case.
					if ($this->data->$key) {
						unset($this->data->$key->name);
						unset($this->data->nls->list[$key]);
					}
				}
			}
			$arIsNewObject = $this->arIsNewObject;
			$arResult = $this->save($properties);

			if ( !$this->error && $arIsNewObject && $this->data->scaffold ) {
				$this->call('system.copy.scaffold.php', array('scaffold' => $this->data->scaffold) );
			}

			global $cache_config;
			$cachestore=new cache($cache_config);
			$cachestore->onObjectSaved($this->id);
		}
	}
?>