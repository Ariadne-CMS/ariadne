#!/usr/bin/env php
<?php

	$ARLoader = 'cmd';
	$currentDir = getcwd();
	$ariadne = dirname($currentDir).'/lib/';

	if (!@include_once($ariadne."/bootstrap.php")) {
		chdir(substr($_SERVER['PHP_SELF'], 0, strrpos($_SERVER['PHP_SELF'], '/')));
		$ariadne = dirname(getcwd()).'/lib/';

		if(!include_once($ariadne."/bootstrap.php")){
			echo "could not find Ariadne";
			exit(1);
		}

		chdir($currentDir);
	}

	require_once(AriadneBasePath.'/configs/axstore.phtml');
	require_once(AriadneBasePath.'/stores/axstore.phtml');

	$nls = $AR->nls->default;

	$HELP_INFO="export [--options] [source path] [destination path] file.ax
  The export command will export objects from the current Ariadne database to
  the specified .ax file. It will export all objects specified 
  by [source path] to your .ax at [destination path].

  options are:
    --verbose                Display what we are doing
    --force                  Force saving of objects
    --without-grants         Don't export grant information
    --without-children       Don't export children of the path
    --without-templates      Don't export templates
    --without-files          Don't export files
    --tar_nofail             Skip tar/gz errors
    --convertToUTF8-[nls]=[source charset] 
                             Convert data for language [nls] from 
                             [source-charset] to UTF-8. Default 
                             source-charset is CP1252.
    --help                   This information\n\n";



	$arg_c=0;
	$arg_v[$arg_c++]=$argv[0];

	next($argv); // do not parse the filename
	while (list(,$cmd)=each($argv)) {
		$option = ldParseOption($cmd);
		if ($option !== false ) {

//			echo "switch(".$option['switch'].")(".$option['subswitch'].")='".$option['value']."'\n";
			switch ($option['switch']) {
				case 'with':
					$ARCurrent->options[$option['subswitch']]=($option['value']) ? $option['value'] : true;
				break;
				case 'without':
					$ARCurrent->options["without_".$option['subswitch']]=true;
				break;

				case 'help':
					echo $HELP_INFO;
					exit;
				break;

				case 'convertToUTF8':
				case 'convert2UTF8':
					if (!$option['value']) {
						$option['value'] = "CP1252";
					}
					$callArgs["convert_charsets"][$option['subswitch']] = $option['value'];
				break;

				case 'verbose':
					$ARCurrent->options["verbose"]=true;
				break;

				case 'force':
					$ARCurrent->options["force"]=true;
				break;

				case 'tar_nofail':
					$ax_config["tar_nofail"]=true;
				break;

				case 'tar_fail':
					$ax_config["tar_nofail"]=false;
				break;

				default:
					die("unknow option-switch (".$option['switch'].")\n");
			}
		} else {
			$arg_v[$arg_c++]=$cmd;
		}
	}

	set_time_limit(0);

	if ($arg_c>=2) {
		$ARLogin="admin";
		$AR->user=new baseObject;
		$AR->user->data=new baseObject;
		$AR->user->data->login="admin";

		if( isset( $ARCurrent->options['temp']) && 
			is_dir($ARCurrent->options['temp']) &&
			is_writeable($ARCurrent->options['temp'])
			){
			$ax_config['temp'] = $ARCurrent->options['temp'];
		}

		$ARCurrent->nolangcheck = true;
		if ($arg_c>3) {
			$ax_config["database"]=$arg_v[3];
			$srcpath=$arg_v[1];
			$destpath=$arg_v[2];
		} else
		if ($arg_c>2) {
			$ax_config["database"]=$arg_v[2];
			$srcpath=$arg_v[1];
			$patharray = explode(",", $srcpath);
		} else {
			$ax_config["database"]=$arg_v[1];
		}

		$ax_config["writeable"]=true;
		$importStore=new axstore("", $ax_config);
		if (!$importStore->error) {
			$inst_store = $store_config["dbms"]."store";
			$store=new $inst_store($root,$store_config);

			/* now load a user (admin in this case)*/
			$login = "admin";
			$query = "object.implements = 'puser' and login.value='$login'";
			$AR->user = current($store->call('system.get.phtml', '', $store->find('/system/users/', $query)));

			if (is_array($patharray) && count($patharray)>1) {
				while (list(, $patharray_entry)=each($patharray)) {
					$patharray_entry = explode("=>", $patharray_entry);
					$srcpath = $patharray_entry[0];
					$destpath = $patharray_entry[1];
					echo "srcpath ($srcpath) destpath($destpath)\n";
					$ARCurrent->importStore=&$importStore;
					$callArgs["srcpath"] = $srcpath;
					$callArgs["destpath"] = $destpath;
					$error=current($store->call("system.export.phtml", $callArgs,
						$store->get("/")));
				}
			} else {
				$ARCurrent->importStore=&$importStore;
				$callArgs["srcpath"] = $srcpath;
				$callArgs["destpath"] = $destpath;
				$error=current($store->call("system.export.phtml", $callArgs,
					$store->get("/")));
			}
			$importStore->close();

		} else {
			$error="ax error: ".$importStore->error;
		}

		if ($error) {
			echo $error."\n";
		}
	} else {
		echo $HELP_INFO;
	}
?>
