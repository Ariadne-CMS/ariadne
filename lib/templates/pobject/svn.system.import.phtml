<?php
	if ($this->CheckLogin("layout") && $this->CheckConfig()) {
		$fstore	= $this->store->get_filestore_svn("templates");
		$svnstack = &PEAR_ErrorStack::singleton('VersionControl_SVN');
		$svn	= $fstore->connect($this->id, $repository, $username, $password);

		$mkdirs = $fstore->svn_mkdirs($svn);
		if ($mkdirs) {
			echo "Repository directory created\n";
			flush();
		} else {
			echo "Repository already exists - use checkout and add instead\n";
			exit;
		}

		$fstore->svn_checkout($svn);

		$fileinfo = array();

		$pinp = $this->data->config->pinp;
		while(list($type, $values) = each($pinp)) {
			while(list($function, $templatelist) = each($values)) {
				$language = key($templatelist);
				$compiled_filename = $type . "." . $function . "." . $language;

				$pinp_filename = $type . "." . $function . "." . $language . ".pinp";
				if ($this->data->config->templates[$type][$function]) {
					$default = 1;
				} else {
					$default = 0;
				}

				$fileinfo[$pinp_filename] = array();
				$fileinfo[$pinp_filename]['ar:function'] = $function;
				$fileinfo[$pinp_filename]['ar:type'] = $type;
				$fileinfo[$pinp_filename]['ar:language'] = $language;
				$fileinfo[$pinp_filename]['ar:default'] = $default;										
				$fstore->svn_add($svn, $pinp_filename);
			}
		}

		$result = $fstore->svn_commit($svn, $message, $fileinfo);
		print_r($result);
	}
?>
