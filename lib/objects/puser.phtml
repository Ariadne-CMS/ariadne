<?php

debug("puser: Load","object");
include_once($this->code."objects/pdir.phtml");

class puser extends pdir { // definitie class

	function CheckPassword($password) {
		debug("puser: CheckPassword([password])","object");
		$password=ARCrypt($password);
		return $password==$this->data->password;
	}

	function GetGrants($path, &$result) {
		debug("puser: GetGrants($path, result)","object");
		if ($this->data->usergrants[$path]) {
			reset($this->data->usergrants[$path]);
			while (list($grant, $value)=each($this->data->usergrants[$path])) {
				$result[$grant]=$value;
			}
			return true;
		}
		return false;
	}

	function FindGrants($path, &$result, $top="") {
		global $ARConfig;
		debug("puser: FindGrants($path, result)","object");
		debug("(in $this->path)","object");
		if ($path==$top) {
			$newpath="";
		} else {
			if (isset($ARConfig->GrantsCache[$this->path][$path])) {
				$newpath=$ARConfig->GrantsCache[$this->path][$path]["setby"];
				$result=$ARConfig->GrantsCache[$this->path][$path]["grants"];
			} else if ($path && !$this->GetGrants($path, $result)) {
				if ($path=="/") {
					$newpath="";
				} else {
					$newpath=$this->store->make_path($path, "..");
					$newpath=$this->FindGrants($newpath, $result);
				}
				$ARConfig->GrantsCache[$this->path][$path]["grants"]=$result;
				$ARConfig->GrantsCache[$this->path][$path]["setby"]=$newpath;
			} 
		}
		return $newpath;
	}

	function copyto($target) {
		$this->error=$ARnls["err:usercannotbecopied"];
		return false;		
	}

} // end class puser
?>