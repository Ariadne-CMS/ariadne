<?php
    /******************************************************************
     pcalendar.phtml                                       Muze Ariadne
     ------------------------------------------------------------------
     Author: Auke van Slooten (auke@muze.nl)
     Date: 31 october 2002

     Copyright 2002 Muze

     This file is part of Ariadne.

     Ariadne is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published 
     by the Free Software Foundation; either version 2 of the License, 
     or (at your option) any later version.
 
     Ariadne is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with Ariadne; if not, write to the Free Software 
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  
     02111-1307  USA

    -------------------------------------------------------------------

     Class inheritance: 	pobject > ppage > pdir > pcalendar
     Description:

       This is the class definition file of the pcalendar class.

    ******************************************************************/

debug("pcalendar: Load","object");
global $ariadne;
require_once($ariadne."/objects/pdir.phtml");

class pcalendar extends pdir { // pcalendar class definition

	function populate($pop_from, $pop_to, $pop_priority, $pop_template="system.get.item-by-time.phtml", $pop_args="") {
		debug("pcalendar: populate($pop_from, $pop_to, $pop_priority, $pop_template, $pop_args)","object");
		$criteria["timeframe"]["start"]["<"]=$pop_to;
		$criteria["timeframe"]["end"][">"]=$pop_from;
		$criteria["priority"]["value"][">="]=$pop_priority;
		$this->find(".",$criteria, $pop_template, $pop_args);
		unset($criteria);
		$criteria["object"]["implements"]["="]="'pcalendar'";
		$criteria["object"]["type"]["="]="'pshortcut'";
		$this->find("",$criteria,"populate.phtml", Array(
			"pop_from"		=> $pop_from,
			"pop_to" 		=> $pop_to,
			"pop_priority"	=> $pop_priority,
			"pop_template"	=> $pop_template,
			"pop_args"		=> $pop_args ) );
		debug("pcalendar: populate: end","all");
	}

	function get_items($priority, $max=0, $start="", $end="") {
		global $ARCurrent;
		unset($ARCurrent->arCalItems);
		unset($ARCurrent->arDateList);
		$now=getdate(time());
		if (!$start) {
			$start=mktime(0,0,0,$now["mon"],$now["mday"], $now["year"]);
		}
		$tomorrow=getdate($start+(3600*24));
		if (!$end) {
			$end=mktime(0,0,0,$tomorrow["mon"],$tomorrow["mday"]+1, $tomorrow["year"]);
		}
		$this->populate($start, $end, $priority, "system.get.item-by-time.phtml");
		if (is_array($ARCurrent->arCalItems)) {
			asort($ARCurrent->arDateList);
			reset($ARCurrent->arDateList);
			$i=0;
			while ((!$max || ($i<$max)) && (list($key, $item)=each($ARCurrent->arDateList))) {
				$items[]=$ARCurrent->arCalItems[$key];
				$i++;
			}
		} else {
			debug("no items found?","all");
		}
		return $items;
	}

	function _get_items($priority, $max=0, $start="", $end="") {
		return $this->get_items($priority, $max, $start, $end);
	}

} // end of pcalendar class definition
?>