<?php
	if (($this->arIsNewObject && $this->CheckLogin("add")) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit")) &&
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set v
			// the defined interface: $arCallArgs)
			$this->data=@current($this->get(".","system.get.data.phtml"));
        } else {
			$this->data->author=$AR->user->getdata("name", "none");
			$this->data->authorpath=$AR->user->path;
			$this->data->created=time();
		}

		$this->data->mimetype=$this->getdata("mimetype","none");

		if (!$this->getdata("name", $ARConfig->nls->default)) {
			$this->error=sprintf($ARnls["err:nodatafordefaultlanguage"],$AR->nls->list[$ARConfig->nls->default]);
		} else {
			if (!$this->data->nls) {
				$this->data->nls=new object;
			}
			$this->data->nls->default=$ARConfig->nls->default;
			reset($AR->nls->list);
			while (list($key, $value)=each($AR->nls->list)) {
				if (isset(${$key})) {
					if (!isset($this->data->$key)) {
						$newnlsdata=new object;
					} else {
						$newnlsdata=$newdata->$key;
					}
					if (!$this->getdata("name", $key)) {
						$this->error=sprintf($ARnls["err:nonameentered"],$AR->nls->list[$key]);
					} else {
						$newnlsdata->name=$this->getdata("name",$key);
						$properties["name"][]["value"]="'".AddSlashes($newnlsdata->name)."'";
						$properties["text"][]["value"]="'".AddSlashes($newnlsdata->name)."'";

				        $newnlsdata->summary=$this->getdata("summary", $key);
						$properties["text"][]["value"]="'".AddSlashes($newnlsdata->summary)."'";

						$newnlsdata->keywords=$this->getdata("keywords", $key);
						$properties["text"][]["value"]="'".AddSlashes($newnlsdata->keywords)."'";

						$this->data->$key=$newnlsdata;
						$this->data->nls->list[$key]=$value;
					}
				}
			}
		}
		if (!$this->error) {

			global $HTTP_POST_FILES;

			if ( ($HTTP_POST_FILES['file'] && 
					is_uploaded_file($classic_temp=$HTTP_POST_FILES['file']['tmp_name']) ) 
				||
					($wizard_temp=$this->getdata("file_temp", "none")) ) {


				$this->MkDir("files".$this->path);

				$path=$this->store->files."files".$this->path.'/view=';

				if ($classic_temp) {
					// file uploaded via classic.form

					$this->data->size=$HTTP_POST_FILES['file']['size'];
					if (!$this->data->mimetype) {
						$this->data->mimetype=$HTTP_POST_FILES['file']['type'];
					}
					if (!move_uploaded_file($classic_temp , $path)) {
						$this->error="Couldn't move file to $path";
					}

				} else {
					// file uploaded via wizard interface

					$this->data->size=$this->getdata("file_size", "none");
					if (!$this->data->mimetype) {
						$this->data->mimetype=$this->getdata("file_type", "none");
					}

					if (!rename($this->store->files."temp".$wizard_temp,$path)) {
						$this->error="Couldn't move file to $path";
					}
				}
			}
		}

		if (!$this->error) {
			$temp=explode("/",$this->data->mimetype);
			$this->data->mime["type"]=$temp[0];
			$this->data->mime["subtype"]=$temp[1];

			$imgfile=$this->store->files."files".$this->path."view=";
			$this->data->thumbwidth=$thumbwidth=$newthumbwidth;
			$this->data->thumbheight=$thumbheight=$newthumbheight;
			$this->data->thumbcolor=$thumbcolor=$newthumbcolor;
			$thumbfile=$this->store->files."files".$this->path."view.thumb=";	

			include($this->store->code."includes/create.thumb.phtml");

			$properties["mimetype"][0]["type"]="'".AddSlashes($this->data->mime["type"])."'";
			$properties["mimetype"][0]["subtype"]="'".AddSlashes($this->data->mime["subtype"])."'";


			$this->save($properties);
		}
	}
?>