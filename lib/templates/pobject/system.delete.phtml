<?php   
  if ($this->CheckSilent("delete")) {
    if (($result=$this->lock(0,"T")) && ($result["identity"])) {
      $this->error=$ARnls["err:cannotlockobject"];
    } else {
      if (!$this->ls(".","Get.phtml")) {
        // remove grants for this object in all user objects.
        if ($data->grants && is_array($data->grants)) {
          while (list($login, $grants)=each($data->grants)) {    
            $criteria["login"]["value"]["="]="'".$login."'";
            $this->find("/system/users/", $criteria, "updategrant.phtml", 
                        "action=delete&path=".RawUrlEncode($this->path)
                   );
          }
        }
        // remove templates
        if ($data->pinp) {
          while (list($type, $values)=each($data->pinp)) {
            while (list($function, $templatelist)=each($values)) {
              while (list($language, $template)=each($templatelist)) {
                $file=$this->store->files."templates".$template;
                // FIXME: check for illegal values of $template
				if (file_exists($file)) {
                  unlink($file);
                }
                $file.=".pinp";
                if (file_exists($file)) {
                  unlink($file);
                }
              }
            }
            // FIXME: typedirs will be renamed to $path/class=/$type/ because of possible name conflicts.
            rmdir($this->store->files."templates".$this->path.$type."/");
          }
        }        
        // remove files
        $dir=$this->store->files."files".$this->path;
        if ($handle=@opendir($dir)) {
          while (false!==($file=readdir($handle))) {
            if ($file!="." && $file!="..") {
              // as recurse should have taken care of subdirectories, unlink should suffice.
              unlink($dir.$file);
            }
          }
          closedir($handle);
          rmdir($dir);
        }
        // clear cache
        $this->ClearCache();
        // finally remove object itself
        $this->delete($this->path);
      }
      $this->unlock();
    }
  } else {
    $this->error=$ARnls["nopermission"];
  }
?>