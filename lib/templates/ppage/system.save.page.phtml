<?php
	if (!$ContentLanguage) {
		$this->error="Somehow there was no language set. This is a bug.";
	} else if (!$ARConfig->nls->list[$ContentLanguage]) {
		$this->error="Unknown language selected... weird";
	} else {
		// only keep the body.innerHTML
		$page=eregi_replace("^.*<body[^>]*>","",$page);
		$page=eregi_replace("</body[^>]*>.*$","",$page);

		if ($AR->nls->charsets[$ContentLanguage]) {
			if ($AR->nls->charsets[$ContentLanguage] == "ISO-8859-1") {
				$page=utf8_decode($page);
			}
		} else
		if ($AR->nls->charsets["default"] == "ISO-8859-1") {
			$page=utf8_decode($page);
		}

		// now change special characters to their html entity
		$page=htmlentities($page);
		// now change '<', '>', '"', '~' and '&' back.
		$page=str_replace("&lt;","<",$page);
		$page=str_replace("&gt;",">",$page);
		$page=str_replace("&quot;","\"",$page);
		$page=str_replace("&tilde;","~",$page);
		// do this last, think about it :)
		$page=str_replace("&amp;","&",$page);
		// change hardcoded links and images to use a placeholder for the root
		$page=ereg_replace("(http://[^/]*)?".$this->store->root,"{arRoot}",$page);
		// first make sure that the object is clean (data can only be set via 
		// the defined interface: $arCallArgs)
		$this->data=@current($this->get(".","system.get.data.phtml"));
		$this->data->$ContentLanguage->page=$page;
		$this->save();
	}
?>