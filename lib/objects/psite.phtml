<?php
    /******************************************************************
     psite.phtml                                           Muze Ariadne
     ------------------------------------------------------------------
     Author: Muze (info@muze.nl)
     Date: 31 october 2002

     Copyright 2002 Muze

     This file is part of Ariadne.

     Ariadne is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published 
     by the Free Software Foundation; either version 2 of the License, 
     or (at your option) any later version.
 
     Ariadne is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with Ariadne; if not, write to the Free Software 
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  
     02111-1307  USA

    -------------------------------------------------------------------

     Class inheritance: 	pobject > ppage > pdir > psection > psite
     Description:

       This is the class definition file of the psite class.

    ******************************************************************/

require_once(AriadneBasePath."/objects/psection.phtml");

class psite extends psection {  // psite class definition

	function getConfigData() {
	global $ARConfig;
		pdir::getConfigData();

		$configcache=$ARConfig->cache[$this->path];
		$hostsubwww = $host = $_SERVER["HTTP_HOST"];
		if (substr($host, 0, 4) == 'www.') {
			$hostsubwww = substr($host, 4);
		}

		$ariadne_workspace = getenv('ARIADNE_WORKSPACE');
		$workspace = $ariadne_workspace && workspace::enabled($this->path);

		if (isset($this->data->config->url_list)) { // backwards compat check; url_list has been moved to config
			$url_list =  $this->data->config->url_list;
			$workspaceurl_list = $this->data->config->workspaceurl_list;
		} else {
			$url_list =  $this->data->url_list;
			$workspaceurl_list = $this->data->workspaceurl_list;
		}

		if ($workspace) {
			if (($sitenls=$workspaceurl_list["host"][$hostsubwww]) 
				|| (($sitenls=$workspaceurl_list["host"]["www.".$hostsubwww]))) {

				$url = $workspaceurl_list["nls"][$sitenls];
			}
			if (!$url) {
				$url=$this->data->workspaceurl;
			}
		} else {
			if (($sitenls=(isset($url_list["host"][$hostsubwww]) ? $url_list["host"][$hostsubwww] : null)) 
				|| (($sitenls=(isset($url_list["host"]["www.".$hostsubwww]) ? $url_list["host"]["www.".$hostsubwww] : null)))) {

				$url = $url_list["nls"][$sitenls];
				if (is_array($url)) {
					$urls = $url;
					$url  = array_shift($urls); // default
					foreach( $urls as $_url ) {
						$_hostsubwww = preg_replace('|^(.*//www\.)|', '', $_url);
						if ($_hostsubwww == $hostsubwww) {
							$url = $_url;
							break;
						}
						$_host = preg_replace('|^(.*//)|', '', $_url);
						if ($_host == $host) {
							$url = $_url;
							break;
						}
					}
				}

			}
			if (!isset($url) || !$url) {
				$url=$this->data->url;
			}
		}

		if ($url) {
			$configcache->root["path"]=$this->path;
			$configcache->root["value"]=$url;
			if (!$workspace) {
			 $configcache->root["list"]=$url_list;
			} else {
			 $configcache->root["list"]=$workspaceurl_list;
			}

			if ($sitenls) {
				$configcache->root["nls"] = $sitenls;
			}
		}

		$configcache->site=$this->path;
		$configcache->section=$this->path;
		$ARConfig->cache[$this->path]=$configcache;
	}

} // end of psite class definition
