<?php
  if (!$error) {

    // this is why you don't want this as a template.
    if (!$imgfile) {
      $imgfile=$this->store->files."files".$this->path."view=";
    }
    if (!$thumbfile) {
      $thumbfile=$this->store->files."files".$this->path."view.thumb=";
    }

    if (!$thumbheight) {
      $thumbheight=$this->data->thumbheight;
    }
    if (!$thumbwidth) {
      $thumbwidth=$this->data->thumbwidth;
    }
    if (!$thumbcolor) {
      $thumbcolor=$this->data->thumbcolor;
    }
	if (!file_exists($imgfile) ) {
		$error="err:imgnotfound";
	} else {
		$imgdata = GetImageSize($imgfile,&$info);
		switch ($imgdata[2]) {
		case 1:
			$l=strrpos($imgfile,'/');
			$leftpath=substr($imgfile,0,$l);
			/*
			$rightpath=substr($imgfile,$l+1);

			$l=strrpos($rightpath,'.');
			if ($l!==false) {
				$newimg=substr($rightpath,0,$l).'.png';
			} else {
				$newimg=$rightpath.'.png';
			}
			*/
			$newimg=$leftpath."/view=.png";
			// $newimg=$this->store->files."files".$this->path."view=.png";
			system("gif2png $imgfile",$retvar);
			if ($retvar) {
				debug("err:gif2png","class");
			} else {
				if (function_exists("imagecreatefrompng")) {
					if (! ($im = imagecreatefrompng($newimg))) {
						debug("err:imgtypenotsupported","class");
					} else {
						unlink($newimg);
					}
				}
			}
			break;
		case 2:
			if (function_exists("imagecreatefromjpeg")) {
				if (! ($im = imagecreatefromjpeg($imgfile))) {
					$error="err:imgtypenotsupported";
				}
			}
			break;
		case 3:
			if (function_exists("imagecreatefrompng")) {
				if (! ($im = imagecreatefrompng($imgfile))) {
					$error="err:imgtypenotsupported";
				}
			}
			break;

		default:
			debug("err:imgtypenotsupported","class");
			break;

		}

		if (!$error && $im) {
			$w=ImageSX($im);
			$h=ImageSY($im);
			$nw=$thumbwidth;
			$nh=$thumbheight;
			if ( ($w>=$nw && $h>=$nh) || ($nw>=$w && $nh>=$h) ) {
				$stretchw=$nw/$w;
				$stretchh=$nh/$h;
				$stretch=($stretchh < $stretchw) ? $stretchh : $stretchw; 
			} else if ($w>$nw && $h<$nh) {
				$stretch=$nw/$w;
			} else if ($w<$nw && $h>$nh) {
				$stretch=$nh/$h;
			}

			$sw=$w*$stretch; $sh=$h*$stretch;
			
			$ni=ImageCreate($nw,$nh);

			// convert hexcolor to RGB
			// valid chars are '0'-'9' && 'A'-'F'
			if ($thumbcolor) {
				$thumbcolor=substr(eregi_replace("[^0-9A-F]","0",$thumbcolor),0,6);
				eval("\$col=(0x$thumbcolor);");
				$red=$col >> 16;
				$green=($col & 0x00FF00) >> 8;
				$blue=($col & 0x0000FF);
			}
			$ic=ImageColorAllocate($ni,$red,$blue,$green);
			ImageFill($ni,0,0,$ic);
			ImageCopyResized($ni,$im,(($nw/2)-($sw/2)),(($nh/2)-($sh/2)),0,0,$w*$stretch,$h*$stretch,$w,$h); 
			if ($thumbfile) {
				if (!ImagePNG($ni,$thumbfile)) {
					$error="err:cannotsavethumbnail";
				}
			}
	  	}
	}
  }
?>