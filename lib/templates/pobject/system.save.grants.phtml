<?php
	/******************************************************************
	 system.save.grants.phtml                              Muze Ariadne
	 ------------------------------------------------------------------
	 Arguments: $delete, $type, $id, $newgrants
	 Grant needed: config
	 Global variables: none

	 This template saves changes to grants defined at the current
	 object. It then updates the changes at the user/group object too.
	 
	 no result

	******************************************************************/
	if ($this->CheckLogin("config") && $this->CheckConfig()) {
		// some variable fetching stuff
		$path=$this->getdata("path", "none");
		$newgrants=$this->getdata("newgrants", "none");
		$delete=$this->getdata("delete", "none");
		$type=$this->getdata("type", "none");
		$id=$this->getdata("id", "none");
		$grant=$this->getdata("grant" , "none");
		if ($delete) {
			if (!$type || !$id || !$delete) {
				$this->error="Missing parameters";
			}
		} else {
			if (!$path || !$newgrants) {
				$this->error="Missing parameters";
			}
		}
		if (!$this->error) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
			$this->data=@current($this->get(".","system.get.data.phtml"));

			if (!$path) {
				$searchpath["pgroup"]="/system/groups/";
				$searchpath["puser"]="/system/users/";
				$criteria["login"]["value"]["="]="'".AddSlashes($id)."'";
				if ($temp=@current($this->find($searchpath[$type], $criteria, "system.get.phtml"))) {
					$path=$temp->path;
				} else {
					$this->error="Couldn't find user/group $id";
				}
			}
			if ($delete) {
				if (!$grant) {
					unset($this->data->grants[$type][$id]);
				} else {
					unset($this->data->grants[$type][$id][$grant]);
					if (!@count($this->data->grants[$type][$id])) {
						unset($this->data->grants[$type][$id]);
					}
				}
				$result=@current($this->get($path, "system.save.grants.user.phtml", Array(
								"action"	=> "delete",
								"path"		=> $this->path,
								"grant"		=> $grant)));
				if ($result=="ok") {
					$this->save();
				} else {
					$this->error="Couldn't remove grant in $id ($path)";
				}
			} else if ($newgrants) {
				if ($type=@current($this->get($path, "system.get.type.phtml"))) {
					if ($this->store->implements($type, "puser")) {	
						if ($id=@current($this->get($path, "system.get.id.phtml"))) {
							$criteria["login"]["value"]["="]="'".AddSlashes($id)."'";
							$newgrants=ereg_replace("[[:space:]]"," ",$newgrants);
							$newgrant=strtok($newgrants, " ");
							if ($newgrant==".") {
								if ($result=@current($this->get($path, "system.get.grants.phtml", Array("path" => $this->path)))) {
									$current=implode(" ", array_keys($result));
									$newgrants=ereg_replace(" ?\. ?",AddSlashes($current),$newgrants);		
								}
								$newgrant=strtok($newgrants, " ");
							} else if (ereg("({(.*)})",$newgrant,$regs)) {
								if ($this->data->grants[$type][$regs[2]]) {
									$cloned=implode(" ",array_keys($this->data->grants[$type][$regs[2]]));
								}
								$newgrants=ereg_replace(" ?".$regs[1]." ?",AddSlashes($cloned),$newgrants);
								$newgrant=strtok($newgrants, " ");
							}
							while ($newgrant && !$this->error) {
								if ($newgrant!=".") {
									if (substr($newgrant,0,1)=="-") {
										$delgrant=substr($newgrant,1);
										unset($this->data->grants[$type][$id][$delgrant]);
										if (!@count($this->data->grants[$type][$id])) {
											unset($this->data->grants[$type][$id]);
										}
										$result=@current($this->get($path, "system.save.grants.user.phtml", Array(
													"action"	=> "delete",
													"path"		=> $this->path,
													"grant"		=> $delgrant )));
										if ($result!="ok") {
											$this->error="Couldn't save grant in $path";
										}
									} else {
										if (substr($newgrant,0,1)=="+") {
											$newgrant=substr($newgrant,1);
										}
										$this->data->grants[$type][$id][$newgrant]=true;
										$result=@current($this->get($path, "system.save.grants.user.phtml", Array(
													"action"	=> "add",
													"path"		=> $this->path,
													"grant"		=> $newgrant)));
										if ($result!="ok") {
											$this->error="Couldn't save grant in $path";
										}
									}
								}
								$newgrant=strtok(" ");
							}
						} else {
							$this->error="Couldn't get login/id from $path";
						}
					} else {
						$this->error="$path is not a user or group";
					}
				} else {
					$this->error="Couldn't retrieve user/group $path";
				}
				if (!$this->error) {
					$this->save($properties);
				}
			}
		}
	}
?>