#!/usr/bin/env php
<?php
	$ariadne = "../lib";

	require($ariadne."/configs/ariadne.phtml");
	require($ariadne."/configs/store.phtml");
	require($ariadne."/configs/axstore.phtml");
	require($ariadne."/includes/loader.cmd.php");
	require($ariadne."/stores/mysqlstore.phtml");
	include($ariadne."/stores/axstore.phtml");

	global $options;

	$arg_c=0;
	$arg_v[$arg_c++]=$argv[0];

	next($argv); // do not parse the filename
	while (list(,$cmd)=each($argv)) {
		$option = ldParseOption($cmd);
		if ($option !== false ) {
			switch ($option['switch']) {
				case 'with':
					$options[$option['subswitch']]=($option['value']) ? $option['value'] : true;
				break;
				case 'without':
					$options["without_".$option['subswitch']]=true;
				break;

				case 'recurse':
					$options["recurse"]=true;
				break;

				case 'tar_nofail':
					$ax_config["tar_nofail"]=true;
				break;

				case 'tar_fail':
					$ax_config["tar_nofail"]=false;
				break;

				default:
					die("unknow option-switch (".$option['switch'].")\n");
			}
		} else {
			$arg_v[$arg_c++]=$cmd;
		}
	}

	function do_ax_list(&$store, $list_path, $recurse) {
		$recurse_list = array();
		$data=$store->call("system.get.phtml", "", $store->ls($list_path));
		if ( is_array($data) ){
			if($recurse >= 2 && count($data) == 0) {
				return;
			}
			echo "$list_path contains ".count($data)." object(s)\n";

			foreach($data as $key => $object) {
				echo "	".$object->type;
				if ( $recurse ) {
					$recurse_list[]=$object->path;
				}
				echo "	".substr($object->path, strlen($list_path));
				if ( $object->axflags & AX_DUMMY ) {
					echo "	[Dummy]";
				}
				echo "\n";
			}
			echo "\n";
		}
		foreach( $recurse_list as $path) {
			do_ax_list($store, $path, $recurse+1);
		}
	}

	set_time_limit(0);

	if ($arg_c>=2) {
		$ARLogin="admin";
		$AR->user=new object;
		$AR->user->data=new object;
		$AR->user->data->login="admin";

		$ax_config["database"]=$arg_v[1];
		$list_path=$arg_v[2];

		$store=new axstore(".", $ax_config);
		if (!$store->error) {
			$list_path=$store->make_path("/", $list_path);
			do_ax_list($store, $list_path, $options["recurse"]);
			$store->close();
		} else {
			$error="ax error: ".$store->error;
		}

		if ($error) {
			echo $error."\n";
		}
	} else {
		echo "USAGE: axlist [--recurse] axfile [path]\n";
	}
?>
