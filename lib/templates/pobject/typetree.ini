<?php

	if (!function_exists('addType')) {
		function addType($type, $name, $parents, $children, $icon) {
		global $ARCurrent;
			if (!$ARConfig->arTypeTree[$type]) {
				$ARConfig->arTypeTree[$type]=Array();
			}
			if (is_array($parents)) {
				foreach($parents as $parent) {
					$ARConfig->arTypeTree[$parent][$type]=$name;
				}
			} else if (is_string($parents)) {
				$ARConfig->arTypeTree[$parents][$type]=$name;
			}
			if (is_array($children)) {
				foreach($children as $child => $name) {
					$ARConfig->arTypeTree[$type][$child]=$name;
				}
			}
			$ARConfig->arTypeIcons[$type]=$icon;
		}
	}

	$ARCurrent->arTypeIcons=Array(
		'paddressbook' 	=> Array( "default" => $AR->dir->images.'icons/paddressbook_open.gif', 
								  "small"   => $AR->dir->images.'icons/paddressbook.gif'), 
		'particle'		=> Array( "default" => $AR->dir->images.'icons/particle_open.gif',
								  "small"   => $AR->dir->images.'icons/particle.gif'), 
		'pbookmark'		=> Array( "default" => $AR->dir->images.'icons/pbookmark_open.gif',
								  "small"   => $AR->dir->images.'icons/pbookmark.gif'),
 		'pcalendar' 	=> Array( "default" => $AR->dir->images.'icons/pcalendar_open.gif',
								  "small"   => $AR->dir->images.'icons/pcalendar.gif'), 
		'pcalitem' 		=> Array( "default" => $AR->dir->images.'icons/pcalitem_open.gif',
								  "small"   => $AR->dir->images.'icons/pcalitem.gif'), 
		'pdir' 			=> Array( "default" => $AR->dir->images.'icons/pdir_open.gif',
								  "small"   => $AR->dir->images.'icons/pdir.gif'), 
		'pfile' 		=> Array( "default" => $AR->dir->images.'icons/pfile_open.gif',
								  "small"   => $AR->dir->images.'icons/pfile.gif'), 
		'pgroup' 		=> Array( "default" => $AR->dir->images.'icons/pgroup_open.gif',
								  "small"   => $AR->dir->images.'icons/pgroup.gif'), 
		'pnewspaper' 	=> Array( "default" => $AR->dir->images.'icons/pnewspaper_open.gif',
								  "small"   => $AR->dir->images.'icons/pnewspaper.gif'), 
		'pobject' 		=> Array( "default" => $AR->dir->images.'icons/pobject_open.gif',
								  "small"   => $AR->dir->images.'icons/pobject.gif'), 
		'ppage' 		=> Array( "default" => $AR->dir->images.'icons/ppage_open.gif',
								  "small"   => $AR->dir->images.'icons/ppage.gif'), 
		'pperson' 		=> Array( "default" => $AR->dir->images.'icons/pperson_open.gif',
								  "small"   => $AR->dir->images.'icons/pperson.gif'), 
		'pphoto' 		=> Array( "default" => $AR->dir->images.'icons/pphoto_open.gif',
								  "small"   => $AR->dir->images.'icons/pphoto.gif'), 
		'pphotobook' 	=> Array( "default" => $AR->dir->images.'icons/pphotobook_open.gif',
								  "small"   => $AR->dir->images.'icons/pphotobook.gif'), 
		'pscenario'		=> Array( "default" => $AR->dir->images.'icons/pscenario_open.gif',
								  "small"   => $AR->dir->images.'icons/pscenario.gif'), 
		'pshortcut'		=> Array( "default" => $AR->dir->images.'icons/pshortcut_open.gif',
								  "small"   => $AR->dir->images.'icons/pshortcut.gif'), 
		'psite' 		=> Array( "default" => $AR->dir->images.'icons/psite_open.gif',
								  "small"   => $AR->dir->images.'icons/psite.gif'), 
		'puser' 		=> Array( "default" => $AR->dir->images.'icons/puser_open.gif',
								  "small"   => $AR->dir->images.'icons/puser.gif'), 
		'porganization'	=> Array( "default" => $AR->dir->images.'icons/porganization_open.gif',
								  "small"   => $AR->dir->images.'icons/porganization.gif'), 
		'pprofile'		=> Array( "default" => $AR->dir->images.'icons/pprofile_open.gif',
								  "small"   => $AR->dir->images.'icons/pprofile.gif'), 
		'psearch'		=> Array( "default" => $AR->dir->images.'icons/psearch_open.gif',
								  "small"   => $AR->dir->images.'icons/psearch.gif'), 
		'psection' 		=> Array( "default" => $AR->dir->images.'icons/psection_open.gif',
								  "small"   => $AR->dir->images.'icons/psection.gif')
	);

	$list=$this->ls('/system/ariadne/types/','system.get.phtml');
	if (is_array($list)) {
		foreach($list as $type) {
			$ARCurrent->arTypeNames[$type->data->value] = $type->nlsdata->name;
			$ARCurrent->arTypeTree[$type->data->value]=Array();
			$children=$this->ls('/system/ariadne/typetree/normal/'.$type->data->value.'/','system.get.phtml');
			if (is_array($children)) {
				foreach($children as $child) {
					$ARCurrent->arTypeTree[$type->data->value][$child->data->value]=$child->nlsdata->name;
				}
			}
		}
	}
	
	if ($this->CheckLogin('read') && $this->CheckConfig($arCallFunction, $arCallArgs)) {
	}
	
	$arResult=$ARCurrent->arTypeTree;
?>
