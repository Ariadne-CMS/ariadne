<?php
	/******************************************************************
	 system.save.data.phtml                                Muze Ariadne
	 ------------------------------------------------------------------
 
	******************************************************************/
	if ((($this->arIsNewObject && $this->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) && 
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
		    $this->data=current($this->get(".","system.get.data.phtml"));
		} else {
			$this->data=new object;
		}


		if (!function_exists("GetPassword")) {
		    function GetPassword($pass1, $pass2) {
			    if ($pass1 && ($pass1==$pass2)) {
				    $password=ARCrypt($pass1);
			    }
			    return $password;
		    }	
		}

		$pass1=$this->getdata("newpass1","none");
		$pass2=$this->getdata("newpass2","none");
		if ($pass1 || $pass2 ) {
			if (!($this->data->password=GetPassword($pass1,$pass2))) {
				$this->error=$ARnls["err:validpassword"];
			}
		}
		$properties["value"][]["value"]="'".AddSlashes($value)."'";
		$this->data->name=$this->getdata("name","none");
		$properties["name"][]["value"]="'".AddSlashes($this->data->name)."'";
		$properties["text"][]["value"]="'".AddSlashes($this->data->name)."'";
		$this->data->email=$this->getdata("email","none");
		$this->data->telephone=$this->getdata("telephone","none");
		if ($this->arIsNewObject) {
			if ($login=$this->getdata("arNewFilename","none")) {
				if (strlen($login)>32) {
					$this->error=$ARnls["err:logintoolong"];
				} else {
					$criteria["login"]["value"]["="]="'".AddSlashes($login)."'";
					$result=$this->find("/system/users/",$criteria,"system.get.phtml");
					if ($result) {
						$this->error=sprintf($ARnls["err:loginexists"],$login);
					} else {
						if (ereg('\{.*\}',$login)) {
							$this->error=$ARnls["err:donotuseid"];
						} else {
							$this->data->login=$login;
							$properties["login"][0]["value"]="'".AddSlashes($login)."'";
							if (!$this->data->password) {
								$this->error=$ARnls["err:validpassword"];
							}
						}
					}
				}
			} else {
				$this->error=$ARnls["err:mustenterlogin"];
			}
		}

		/* now for backwards compatibility use the key if $val is not a path, 
		   in that case the key will be a path. */
		$selected = $this->getdata("groups", "none");
		$groups = Array();
		if (is_array($selected)) {
			reset($selected);
			while (list($key, $val)=each($selected)) {
				if (substr($val, 0, 1) == "/") {
					$groups[$val] = $val;
				} else {
					$groups[$key] = $val;
				}
			}
		}
		


		if ($profile=$this->getdata("profile","none")) {
			$this->data->profile=$profile;
			if ($this->arIsNewObject && !$this->getdata("arProfileLoaded")){
				$pdata=current($this->get($profile,'system.get.phtml'));
				/* 
					now setting default values from the profile, 
					guess it would be better to preload them directly in the templates
					(direct feedback & the possibility to override 
				*/
				$this->data->language=$pdata->data->language;
				$this->data->interface=$pdata->data->interface;
				$this->data->editor=$pdata->data->editor;
				if(!$customgrants) {
					$groups=$pdata->data->groups;
				}
       
			}    
		} else {
			unset($this->data->profile);
		}
		if ($language=$this->getdata("language","none")) {
			$this->data->language=$language;
		}
		if ($interface=$this->getdata("interface","none")) {
			$this->data->interface=$interface;
		}
		if ($editor=$this->getdata("editor","none")) {
			$this->data->editor=$editor;
		}
		if (!$this->error) {
			$this->save($properties);
			$this->ClearCache();
			if (!$this->error) {
				/* warning: do not save this object again, since system.set.user.phtml updates the object also.. */
				$oldgroups = $this->data->groups;

				if (is_array($oldgroups)) {
					reset($oldgroups);
					while (list($key, $val)=each($oldgroups)) {
						if (!$groups[$key]) {
							$this->get($key, "system.set.user.phtml", Array(
										"action" => "remove",
										"path" => $this->path));
						}
					}
				}

				if (is_array($groups)) {
					reset($groups);
					while (list($key, $val)=each($groups)) {
						if (!$oldgroups[$key]) {
							$this->get($key, "system.set.user.phtml", Array(
										"action" => "add",
										"path" => $this->path));
						}
					}

				}
				if ($ARCurrent->session && $ARCurrent->session->get("ARLogin") == $this->data->login
					&& $pass1) {
					$ARCurrent->session->put("ARLogin", "");
				}

			}
		}
	}
?>
