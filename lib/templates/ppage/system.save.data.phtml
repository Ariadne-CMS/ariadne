<?php
	/******************************************************************
	 system.save.data.phtml				 Muze Ariadne v2.1
	 ------------------------------------------------------------------
 
	******************************************************************/
        require_once($this->store->get_config('code')."modules/mod_page.php");
	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) && 
			$this->CheckConfig()) {
		if (!$this->arIsNewObject) {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
		    $this->data=current($this->get(".","system.get.data.phtml"));
		} else {
			$this->data=new object;
		}

		// unset the properties array, so no properties can be passed to this template.
		$properties = Array();

		if (!$this->getdata("name",$ARConfig->nls->default)) { // default language for this path
			$this->error=sprintf($ARnls["err:nodatafordefaultlanguage"],$AR->nls->list[$ARConfig->nls->default]);
		} else {
			if (!$this->data->nls) {
				$this->data->nls=new object;
			}
			$this->data->nls->default=$ARConfig->nls->default;

			if ($ContentEditOptionsPath) {
				$arEditorSettings=$ARCurrent->editorSettings[$ContentEditOptionsPath];
				if (!$arEditorSettings) {
					$arEditorSettings=current($this->get($ContentEditOptionsPath, "editor.ini"));
					$ARCurrent->editorSettings[$ContentEditOptionsPath]=$arEditorSettings;
				}
			} else {
				$arEditorSettings=$ARCurrent->editorSettings[$this->path];
				if (!$arEditorSettings) {
					$arEditorSettings=$this->call("editor.ini");
					$ARCurrent->editorSettings[$this->path]=$arEditorSettings;
				}
			}

			reset($AR->nls->list);
			$count=0;
			while (list($key, $value)=each($AR->nls->list)) {

				if ($name=$this->getdata("name",$key)) { // $name is the variable that must be set for a language to be available.
					if (!$this->data->$key) {
						debug("$key not yet set","all");
						$newnlsdata=new object;
					} else {
						debug("$key was set","all");
						$newnlsdata=$this->data->$key;
					}
					debug("name found: $name","all");
					$newnlsdata->name=$name;
					$properties["name"][$count]["value"]="'".AddSlashes($newnlsdata->name)."'";
					$properties["name"][$count]["nls"]="'$key'";
					$properties["text"][$count]["value"]="'".AddSlashes($newnlsdata->name)."'";
					$properties["text"][$count]["nls"]="'$key'";
					$count++;
					$newnlsdata->summary=page::compile($this->getdata("summary",$key), $key);
					if ($arEditorSettings) {
						if ($arEditorSettings["htmltidy"]["enabled"]) {
							include_once($this->store->get_config("code")."modules/mod_tidy.php");
							$config=$arEditorSettings["htmltidy"];
							$config["temp"]=$this->store->get_config("files")."temp/";
							$config["path"]=$AR->Tidy->path;
							$tidy=new tidy($config);
							$result=$tidy->clean($newnlsdata->summary);
							$summary=$result["html"];
						}
						if ($arEditorSettings["allow_tags_summary"]) {
							$newnlsdata->summary=strip_tags($newnlsdata->summary, $arEditorSettings["allow_tags_summary"]);
						}
					}
					$properties["text"][$count]["value"]="'".AddSlashes($newnlsdata->summary)."'";
					$properties["text"][$count]["nls"]="'$key'";
					$count++;
					if ($this->store->is_supported("fulltext")) {
						$properties["fulltext"][$count]["value"]="'".AddSlashes($this->store->format_for_fti(
								$newnlsdata->name." ".
								$this->html_to_text($newnlsdata->summary)." ".
								$newnlsdata->title." ".
								$this->html_to_text($this->getdata("page",$key))
								))."'";
						$properties["fulltext"][$count]["nls"]="'$key'";
					}
					$this->data->{$key}=$newnlsdata;
					$this->data->nls->list[$key]=$value;
				} else { // clear language values for $key->name if set, keep the rest, just in case.
					if ($this->data->$key) {
						unset($this->data->$key->name);
						unset($this->data->nls->list[$key]);
					}
				}
			}
			$this->save($properties);

			if (!$this->error) {
				unset($this->arIsNewObject);
				reset($AR->nls->list);
				$count=0;
				while (list($key, $value)=each($AR->nls->list)) {
					/* Reset the loop check, when saving lots of languages it might cause a loopcount exceeded */
					global $ARBeenHere;
					$ARBeenHere=Array();
					                
					$page=$this->getdata("page",$key);
					if ($page!==false) { // && $AR->user->data->login!='admin') {
						$this->call("system.save.page.phtml",Array("ContentLanguage" => $key, "page" => $page));
					}
				}
//				if ($AR->user->data->login!='admin') {
					$this->ClearCache();
//				}
			}
		}
	}
?>