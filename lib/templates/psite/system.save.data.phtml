<?php
	/******************************************************************
	 system.save.data.phtml				 Muze Ariadne v2.1
	 ------------------------------------------------------------------
 
	******************************************************************/

	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) &&
			$this->CheckConfig()) {
		$this->call("pdir::system.save.data.phtml",$arCallArgs);

		// unset the properties array, so no properties can be passed to this template.
		$properties = Array();
		$this->data->url_list = Array();
		$this->data->workspaceurl_list = Array();

		if (!$this->error) {
			$this->arIsNewObject=false;
            reset($AR->nls->list);
            $count=0;
			$clearcache=false;

            while (!$this->error && (list($key, $value)=each($AR->nls->list))) {
                if ($name=$this->getdata("name",$key)) { // $name is the variable that must be set for a language to be available.
					$url=$this->getdata("url",$key);
					if (substr($url, -1, 1)=='/') {
						$url=substr($url, 0, -1);
					}
					if ($url!=$this->data->$key->url) {
						$clearcache=true;
						$this->data->$key->url=$url;
					}
					preg_match('|^([a-z0-9]+)://([^/:]+)(:[0-9]+)?|i', $url, $regs);
					if ($url) {
						$this->data->url_list['nls'][$key] = $url;
						if (!$this->data->url_list['host'][$regs[2].$regs[3]]) {
							$this->data->url_list['host'][$regs[2].$regs[3]] = $key;
						} else {
							$this->error = "Please fill in distinctive hostnames; they should not be the same for different languages.";
						}
					}
					$properties["url"][$count]["protocol"]=	"'".AddSlashes($regs[1])."'";
					$properties["url"][$count]["host"]=		"'".AddSlashes($regs[2])."'";
					if ($regs[3]) {
						$properties["url"][$count]["port"]=	"'".substr(AddSlashes($regs[3]), 1)."'";
					}
					$count++;

					$workspaceurl=$this->getdata("workspaceurl",$key);
					if (substr($workspaceurl, -1, 1)=='/') {
						$workspaceurl=substr($workspaceurl, 0, -1);
					}
					if ($workspaceurl!=$this->data->$key->workspaceurl) {
						$clearcache=true;
						$this->data->$key->workspaceurl=$workspaceurl;
					}
					preg_match('|^([a-z0-9]+)://([^/:]+)(:[0-9]+)?|i', $workspaceurl, $regs);
					if ($workspaceurl) {
						$this->data->workspaceurl_list['nls'][$key] = $workspaceurl;
						if (!$this->data->workspaceurl_list['host'][$regs[2].$regs[3]]) {
							$this->data->workspaceurl_list['host'][$regs[2].$regs[3]] = $key;
						} else {
							$this->error = "Please fill in distinctive hostnames; they should not be the same for different languages.";
						}
					}
					$properties["url"][$count]["protocol"]=	"'".AddSlashes($regs[1])."'";
					$properties["url"][$count]["host"]=		"'".AddSlashes($regs[2])."'";
					if ($regs[3]) {
						$properties["url"][$count]["port"]=	"'".substr(AddSlashes($regs[3]), 1)."'";
					}
					$count++;


                }
			}
			if ($clearcache) {
				// Changing the root url invalidates all cache images below this.
				$this->ClearCache();
			}
			$this->data->url=$this->data->{$this->data->nls->default}->url;
			$this->data->workspaceurl=$this->data->{$this->data->nls->default}->workspaceurl;
			if (!$this->error) {
				$this->save($properties);
				$this->ClearCache();
			}
		}
	}
?>