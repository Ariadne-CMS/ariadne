<?php
/******************************************************************************
  Mysql4 Store 1.0						Ariadne 2.0

  Copyright (C) 1998-2003  Muze 

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

  --------------------------------------------------------------------------

  This is an implementation of the store class for MySQL. The store class is
  an interface between Ariadne objects and a storage layer. It is used by all 
  Ariadne objects to call templates in other objects or to manipulate
  the location and contents of objects in the Ariadne system.

*******************************************************************************/

/* include the base class */
include_once($ariadne."/stores/mysqlstore.phtml");

// general objectstore functions

class mysql4store extends mysqlstore {

	public function __construct($path, $config) {
		parent::__construct($path, $config);
		/* Include module mysql4_compiler */
		include_once($this->code."stores/modules/mysql4_compiler.php");
	}

	public function is_supported($feature) {
	/**********************************************************************************
		This function takes as argument a feature description and returns
		true if this feature is supported and false otherwise
	**********************************************************************************/
		switch	($feature) {
			case "fulltext_boolean":
				$result = parent::is_supported("fulltext");
			break;
			default:
				$result = parent::is_supported($feature);
			break;
		}
		return $result;
	}
}
?>
