<?php
	/******************************************************************
	 system.save.data.phtml				 Muze Ariadne v2.1
	 ------------------------------------------------------------------
 
	******************************************************************/

	if ((($this->arIsNewObject &&
			($parentobj=current($this->get($this->parent, "system.get.phtml"))) &&
			$parentobj->CheckLogin("add", $this->type)) ||
			(!$this->arIsNewObject && $this->CheckLogin("edit"))) &&
			$this->CheckConfig()) {
		if ($this->arIsNewObject) {
			$this->data=new object;
			$filename=$this->getdata("arNewFilename","none");
			if (!$this->data->mimetype=$this->getdata("mimetype","none")) {
				$this->data->mimetype=$this->getdata("file_type","none");
			}
			$this->data->filesize=$this->getdata("file_size","none");
			while (list($key,$value)=each($ARConfig->nls->list)) {
				if (!$this->data->$key->name) {
					$this->data->$key->name=$filename;
				}
			}
		} else {
			// first make sure that the object is clean (data can only be set via 
			// the defined interface: $arCallArgs)
			$this->data=current($this->get(".","system.get.data.phtml"));
		}
		
		// unset the properties array, so no properties can be passed to this template.
		$properties = Array();
		
		if (!$this->getdata("name",$ARConfig->nls->default)) { // default language for this path
			$this->error=sprintf($ARnls["err:nodatafordefaultlanguage"],$AR->nls->list[$ARConfig->nls->default]);
		} else {
			if (!$this->data->nls) {
				$this->data->nls=new object;
			}
			$this->data->nls->default=$ARConfig->nls->default;
			reset($AR->nls->list);
			$count=0;
			while (list($key, $value)=each($AR->nls->list)) {
				
				if ($this->getdata("name",$key)) {
					if (!$this->data->$key) {
						$newnlsdata=new object;
					} else {
						$newnlsdata=$this->data->$key;
					}
					$newnlsdata->name=$this->getdata("name",$key);
					$properties["name"][$count]["value"]="'".AddSlashes($newnlsdata->name)."'";
					$properties["name"][$count]["nls"]="'$key'";
					$properties["text"][$count]["value"]="'".AddSlashes($newnlsdata->name)."'";
					$properties["text"][$count]["nls"]="'$key'";
 					$count++;
					$newnlsdata->summary=$this->getdata("summary",$key);
					$properties["text"][$count]["value"]="'".AddSlashes(substr($newnlsdata->summary,0,255))."'";
					$properties["text"][$count]["nls"]="'$key'";
					$count++;
					if ($this->store->is_supported("fulltext")) {
						$properties["fulltext"][$count]["value"]="'".AddSlashes($this->store->format_for_fti(
								$newnlsdata->name." ".
								$this->html_to_text($newnlsdata->summary)." "
								))."'";
						$properties["fulltext"][$count]["nls"]="'$key'";
					}
					$this->data->$key=$newnlsdata;
					$this->data->nls->list[$key]=$value;
				} else { // clear language values for $key->name if set, keep the rest, just in case.
					if ($this->data->$key) {
						unset($this->data->$key->name);
						unset($this->data->nls->list[$key]);
					}
				}
			}
		}
		$this->data->mimetype=$this->getdata("mimetype","none");
		$this->save($properties);		

		if (!$this->error) {
			$this->ClearCache();
			$fulltext = $properties['fulltext'];
			unset($properties);

			$this->arIsNewObject=false;

			$tempfile=$this->getdata("file_temp","none");
			// now check whether $file_temp is defined, if so, move it
			if (!$this->error) {
				if ($tempfile) {
					$tempfile=ereg_replace("[\\\/]","",$tempfile); // make sure nobody gets /etc/passwd			
					$tempfile=$this->store->get_config("files")."temp/".$tempfile;

					if (file_exists($tempfile)) {	
						$files=$this->store->get_filestore("files");
						$files->copy_to_store($tempfile, $this->id, "file");
						unlink($tempfile);
						if (!$this->data->mimetype=$this->getdata("mimetype","none")) {
							$this->data->mimetype=$this->getdata("file_type","none");
						}
						$this->data->filesize=$this->getdata("file_size","none"); 

					} else {
						$tempfile=false;
					}
				} 
				if ($this->store->is_supported("fulltext")) {
					$filetext = $this->GetPlainText();
					if ($filetext) {
						$count++;
						$properties["fulltext"] = $fulltext;
						$properties["fulltext"][$count]["value"]="'".AddSlashes($this->store->format_for_fti(
								$filetext
								))."'";
					}
				}

				$this->save($properties);
			} else {
				debug("err: $this->error");
			}
		}
	}
?>